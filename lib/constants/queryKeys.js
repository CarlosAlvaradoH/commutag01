export const QUERY_KEYS = {
  communityPoolsQuery: 'communityPoolsQuery',
  ethereumErc20sQuery: 'ethereumErc20sQuery',
  ethereumErc721sQuery: 'ethereumErc721sQuery',
  ethereumLootBoxQuery: 'ethereumLootBoxQuery',
  ethereumPoolQuery: 'ethereumPoolQuery',
  ethereumUsersDripQuery: 'ethereumUsersDripQuery',
  ethereumUsersChainQuery: 'ethereumUsersChainQuery',
  lootBoxQuery: 'lootBoxQuery',
  poolAddressesQuery: 'poolAddressesQuery',
  poolQuery: 'poolQuery',
  historicPoolsQuery: 'historicPoolsQuery',
  poolsQuery: 'poolsQuery',
  poolDripsQuery: 'poolDripsQuery',
  poolPrizesQuery: 'poolPrizesQuery',
  poolPrizeQuery: 'poolPrizeQuery',
  playerQuery: 'playerQuery',
  playerPrizesQuery: 'playerPrizesQuery',
  allUsersPrizesQuery: 'allUsersPrizesQuery',
  prizeQuery: 'prizeQuery',
  readProvider: 'readProvider',
  sponsorQuery: 'sponsorQuery',
  uniswapTokensQuery: 'uniswapTokensQuery',
  tokenPrices: 'tokenPrices',
  accountQuery: 'accountQuery',
  prizePoolAccountQuery: 'prizePoolAccountQuery',
  controlledTokenBalancesQuery: 'controlledTokenBalancesQuery',
  claimablePoolQuery: 'claimablePoolQuery',
  claimablePoolTotal: 'claimablePoolTotal',
  retroactivePoolClaimDataQuery: 'retroactivePoolClaimDataQuery',
  poolTokenFaucetsQuery: 'poolTokenFaucetsQuery',
  poolTokenDataQuery: 'poolTokenDataQuery',
  coingeckoImagesByContractAddressesQuery: 'coingeckoImagesByContractAddressesQuery',
  coingeckoTokenInfoQuery: 'coingeckoTokenInfoQuery',
  claimablePoolFromTokenFaucets: 'claimablePoolFromTokenFaucets',
  claimablePoolTokenFaucetAddresses: 'claimablePoolTokenFaucetAddresses',
  tokenFaucetDripRateQuery: 'tokenFaucetDripRateQuery',
  tokenFaucetDripData: 'tokenFaucetDripData',
  reserveData: 'reserveData',
  usePrizePoolsLockedValue: 'usePrizePoolsLockedValue',
  totalPrizePoolPrizes: 'totalPrizePoolPrizes',
  usePools: 'usePools',
  usePoolsByChainId: 'usePoolsByChainId',
  usePool: 'usePool',
  lootBoxComputedAddresses: 'lootBoxComputedAddresses',
  userData: 'userData',
  envProviders: 'envProviders',
  uniswapLPStakingPool: 'uniswapLPStakingPool',
  checklyCheckStatuses: 'checklyCheckStatuses',
  proposalsQuery: 'proposalsQuery'
}
