{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Link from 'next/link';\nimport { ethers } from 'ethers';\nimport { useTranslation } from 'lib/../i18n';\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider';\nimport { PoolDataContext } from 'lib/components/contextProviders/PoolDataContextProvider';\nimport { PoolNumber } from 'lib/components/PoolNumber';\nimport { usePlayerQuery } from 'lib/hooks/usePlayerQuery';\nimport { normalizeTo18Decimals } from 'lib/utils/normalizeTo18Decimals';\nimport { displayAmountInEther } from 'lib/utils/displayAmountInEther';\nimport { testAddress } from 'lib/utils/testAddress';\nimport IconTarget from 'assets/images/icon-target@2x.png';\nexport const AccountWinnings = () => {\n  const {\n    t\n  } = useTranslation();\n  const {\n    chainId,\n    pauseQueries,\n    usersAddress\n  } = useContext(AuthControllerContext);\n  const {\n    pools\n  } = useContext(PoolDataContext);\n  const playerAddressError = testAddress(usersAddress);\n  const blockNumber = -1;\n  const {\n    status,\n    data: playerData,\n    error,\n    isFetching\n  } = usePlayerQuery(pauseQueries, chainId, usersAddress, blockNumber, playerAddressError);\n\n  if (error) {\n    console.error(error);\n  }\n\n  const totalWinnings = () => {\n    let cumulativeWinningsAllPools = ethers.utils.bigNumberify(0);\n    playerData === null || playerData === void 0 ? void 0 : playerData.forEach(playerData => {\n      const pool = pools === null || pools === void 0 ? void 0 : pools.find(pool => pool.poolAddress === playerData.prizePool.id);\n\n      if (!pool || !playerData.balance) {\n        return;\n      }\n\n      const decimals = parseInt(pool === null || pool === void 0 ? void 0 : pool.underlyingCollateralDecimals, 10); // Calculate winnings\n\n      const winnings = normalizeTo18Decimals(playerData.cumulativeWinnings, decimals);\n      cumulativeWinningsAllPools = cumulativeWinningsAllPools.add(winnings);\n    });\n    return cumulativeWinningsAllPools;\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"h5\", {\n    className: \"font-normal text-accent-2 mt-16 mb-4\"\n  }, t('myWinnings')), __jsx(\"div\", {\n    className: \"xs:mt-3 bg-accent-grey-4 rounded-lg xs:mx-0 px-2 sm:px-6 py-3\"\n  }, __jsx(\"div\", {\n    className: \"flex justify-between flex-col xs:flex-row xs:pt-4 pb-0 px-2 xs:px-4\"\n  }, __jsx(\"div\", {\n    className: \"flex-col order-2 xs:order-1\"\n  }, __jsx(\"h6\", {\n    className: \"flex items-center font-normal\"\n  }, t('allTimeWinnings')), __jsx(\"h3\", null, \"$\", __jsx(PoolNumber, null, displayAmountInEther(totalWinnings(), {\n    precision: 2\n  })))), __jsx(\"div\", {\n    className: \"order-1 xs:order-2 ml-auto\"\n  }, __jsx(\"img\", {\n    src: IconTarget,\n    className: \"w-24 h-24 mx-auto\"\n  }))), __jsx(\"div\", {\n    className: \"text-inverse flex flex-col justify-between xs:px-2\"\n  }, __jsx(\"table\", {\n    className: \"table-fixed w-full text-xxs xs:text-base sm:text-xl mt-6\"\n  }, __jsx(\"tbody\", null))), __jsx(\"div\", {\n    className: \"text-xxxs xs:text-xxs sm:text-xs opacity-70 px-2 xs:px-4 py-4\"\n  }, t('seeAllPastWinnersOn'), \" \", __jsx(Link, {\n    href: \"/prizes/PT-cDAI\",\n    shallow: true\n  }, __jsx(\"a\", {\n    className: \"text-accent-grey-1 underline\"\n  }, t('pastWinnersPrizeHistoryLink'))))));\n};","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/AccountWinnings.jsx"],"names":["React","useContext","Link","ethers","useTranslation","AuthControllerContext","PoolDataContext","PoolNumber","usePlayerQuery","normalizeTo18Decimals","displayAmountInEther","testAddress","IconTarget","AccountWinnings","t","chainId","pauseQueries","usersAddress","pools","playerAddressError","blockNumber","status","data","playerData","error","isFetching","console","totalWinnings","cumulativeWinningsAllPools","utils","bigNumberify","forEach","pool","find","poolAddress","prizePool","id","balance","decimals","parseInt","underlyingCollateralDecimals","winnings","cumulativeWinnings","add","precision"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport Link from 'next/link'\nimport { ethers } from 'ethers'\n\nimport { useTranslation } from 'lib/../i18n'\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider'\nimport { PoolDataContext } from 'lib/components/contextProviders/PoolDataContextProvider'\nimport { PoolNumber } from 'lib/components/PoolNumber'\nimport { usePlayerQuery } from 'lib/hooks/usePlayerQuery'\nimport { normalizeTo18Decimals } from 'lib/utils/normalizeTo18Decimals'\nimport { displayAmountInEther } from 'lib/utils/displayAmountInEther'\nimport { testAddress } from 'lib/utils/testAddress'\n\nimport IconTarget from 'assets/images/icon-target@2x.png'\n\nexport const AccountWinnings = () => {\n  const { t } = useTranslation()\n  \n  const { chainId, pauseQueries, usersAddress } = useContext(AuthControllerContext)\n  const { pools } = useContext(PoolDataContext)\n\n\n  const playerAddressError = testAddress(usersAddress)\n\n  const blockNumber = -1\n  const {\n    status,\n    data: playerData,\n    error,\n    isFetching\n  } = usePlayerQuery(pauseQueries, chainId, usersAddress, blockNumber, playerAddressError)\n\n  if (error) {\n    console.error(error)\n  }\n\n\n\n  const totalWinnings = () => {\n    let cumulativeWinningsAllPools = ethers.utils.bigNumberify(0)\n\n    playerData?.forEach(playerData => {\n      const pool = pools?.find(pool => pool.poolAddress === playerData.prizePool.id)\n\n      if (!pool || !playerData.balance) {\n        return\n      }\n\n      const decimals = parseInt(pool?.underlyingCollateralDecimals, 10)\n\n      // Calculate winnings\n      const winnings = normalizeTo18Decimals(\n        playerData.cumulativeWinnings,\n        decimals\n      )\n\n      cumulativeWinningsAllPools = cumulativeWinningsAllPools.add(\n        winnings\n      )\n    })\n\n    return cumulativeWinningsAllPools\n  }\n\n  return <>\n    <h5\n      className='font-normal text-accent-2 mt-16 mb-4'\n    >\n      {t('myWinnings')}\n    </h5>\n\n    <div\n      className='xs:mt-3 bg-accent-grey-4 rounded-lg xs:mx-0 px-2 sm:px-6 py-3'\n    >\n      <div className='flex justify-between flex-col xs:flex-row xs:pt-4 pb-0 px-2 xs:px-4'>\n\n        <div className='flex-col order-2 xs:order-1'>\n          <h6\n            className='flex items-center font-normal'\n          >\n            {t('allTimeWinnings')}\n          </h6>\n\n          <h3>\n            $<PoolNumber>\n              {displayAmountInEther(totalWinnings(), { precision: 2 })}\n            </PoolNumber>\n          </h3>\n        </div>\n\n        <div\n          className='order-1 xs:order-2 ml-auto'\n        >\n          <img\n            src={IconTarget}\n            className='w-24 h-24 mx-auto'\n          />\n        </div>\n      </div>\n\n      <div\n        className='text-inverse flex flex-col justify-between xs:px-2'\n      >\n        <table\n          className='table-fixed w-full text-xxs xs:text-base sm:text-xl mt-6'\n        >\n          <tbody>\n          </tbody>\n        </table>\n      </div>\n\n      <div\n        className='text-xxxs xs:text-xxs sm:text-xs opacity-70 px-2 xs:px-4 py-4'\n      >\n        {t('seeAllPastWinnersOn')} <Link\n          href='/prizes/PT-cDAI'\n          shallow\n        >\n          <a \n            className='text-accent-grey-1 underline'\n          >\n            {t('pastWinnersPrizeHistoryLink')}\n          </a>\n        </Link>\n      </div>\n    </div>\n  </>\n}\n"]},"metadata":{},"sourceType":"module"}