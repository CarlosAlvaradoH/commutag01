{"ast":null,"code":"import { useQuery } from 'react-query';\nimport { MAINNET_POLLING_INTERVAL, QUERY_KEYS } from 'lib/constants';\nimport { getPoolPrizesData } from 'lib/fetchers/getPoolPrizesData';\nexport function usePoolPrizesQuery(pauseQueries, chainId, pool, first, blockNumber) {\n  blockNumber = blockNumber ? blockNumber : -1;\n  first = first ? first : -1;\n  const poolAddress = pool === null || pool === void 0 ? void 0 : pool.poolAddress;\n  const refetchInterval = !pauseQueries && blockNumber === -1 ? MAINNET_POLLING_INTERVAL : false;\n  return useQuery([QUERY_KEYS.poolPrizesQuery, chainId, poolAddress, first, blockNumber], async () => {\n    return getPoolPrizesData(chainId, poolAddress, first, blockNumber);\n  }, {\n    enabled: !pauseQueries && chainId && poolAddress && blockNumber,\n    refetchInterval\n  });\n}","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/hooks/usePoolPrizesQuery.js"],"names":["useQuery","MAINNET_POLLING_INTERVAL","QUERY_KEYS","getPoolPrizesData","usePoolPrizesQuery","pauseQueries","chainId","pool","first","blockNumber","poolAddress","refetchInterval","poolPrizesQuery","enabled"],"mappings":"AAAA,SAASA,QAAT,QAAyB,aAAzB;AAEA,SACEC,wBADF,EAEEC,UAFF,QAGO,eAHP;AAIA,SAASC,iBAAT,QAAkC,gCAAlC;AAEA,OAAO,SAASC,kBAAT,CAA4BC,YAA5B,EAA0CC,OAA1C,EAAmDC,IAAnD,EAAyDC,KAAzD,EAAgEC,WAAhE,EAA6E;AAClFA,EAAAA,WAAW,GAAGA,WAAW,GAAGA,WAAH,GAAiB,CAAC,CAA3C;AACAD,EAAAA,KAAK,GAAGA,KAAK,GAAGA,KAAH,GAAW,CAAC,CAAzB;AAEA,QAAME,WAAW,GAAGH,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAEG,WAA1B;AAEA,QAAMC,eAAe,GAAG,CAACN,YAAD,IAAkBI,WAAW,KAAK,CAAC,CAAnC,GACtBR,wBADsB,GAEtB,KAFF;AAIA,SAAOD,QAAQ,CACb,CAACE,UAAU,CAACU,eAAZ,EAA6BN,OAA7B,EAAsCI,WAAtC,EAAmDF,KAAnD,EAA0DC,WAA1D,CADa,EAEb,YAAY;AAAE,WAAON,iBAAiB,CAACG,OAAD,EAAUI,WAAV,EAAuBF,KAAvB,EAA8BC,WAA9B,CAAxB;AAAoE,GAFrE,EAGb;AACEI,IAAAA,OAAO,EAAE,CAACR,YAAD,IAAiBC,OAAjB,IAA4BI,WAA5B,IAA2CD,WADtD;AAEEE,IAAAA;AAFF,GAHa,CAAf;AAQD","sourcesContent":["import { useQuery } from 'react-query'\n\nimport {\n  MAINNET_POLLING_INTERVAL,\n  QUERY_KEYS\n} from 'lib/constants'\nimport { getPoolPrizesData } from 'lib/fetchers/getPoolPrizesData'\n\nexport function usePoolPrizesQuery(pauseQueries, chainId, pool, first, blockNumber) {\n  blockNumber = blockNumber ? blockNumber : -1\n  first = first ? first : -1\n\n  const poolAddress = pool?.poolAddress\n\n  const refetchInterval = !pauseQueries && (blockNumber === -1) ?\n    MAINNET_POLLING_INTERVAL :\n    false\n\n  return useQuery(\n    [QUERY_KEYS.poolPrizesQuery, chainId, poolAddress, first, blockNumber],\n    async () => { return getPoolPrizesData(chainId, poolAddress, first, blockNumber) },\n    { \n      enabled: !pauseQueries && chainId && poolAddress && blockNumber,\n      refetchInterval\n    }\n  )\n}\n"]},"metadata":{},"sourceType":"module"}