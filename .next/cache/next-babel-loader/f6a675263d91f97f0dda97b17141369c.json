{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport { Input } from 'lib/components/Input';\nexport const TextInputGroup = props => {\n  const {\n    id,\n    label,\n    alignLeft,\n    disabled,\n    inlineButton,\n    unsignedNumber,\n    unsignedWholeNumber,\n    bottomRightLabel,\n    centerLabel,\n    rightLabel\n  } = props;\n  let {\n    type\n  } = props;\n  let pattern = {};\n\n  if (type === 'email') {\n    pattern = {\n      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n      message: 'invalid email address'\n    };\n  } else if (unsignedNumber) {\n    type = 'number';\n    pattern = {\n      value: /^\\d*\\.?\\d*$/,\n      message: 'please enter a positive number'\n    };\n  } else if (unsignedWholeNumber) {\n    type = 'number';\n    pattern = {\n      value: /^\\d+$/,\n      message: 'please enter a positive number'\n    };\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classnames('fieldset relative w-full', {\n      'mx-0': alignLeft,\n      'mx-auto': !alignLeft\n    })\n  }, (label || rightLabel || centerLabel) && __jsx(\"div\", {\n    className: classnames('flex justify-between items-end')\n  }, label && __jsx(\"label\", {\n    htmlFor: id,\n    className: classnames('mt-0 sm:pr-2 trans', {\n      'sm:pl-8 w-1/2': rightLabel && !centerLabel,\n      'sm:pl-8 w-1/3': rightLabel && centerLabel,\n      'font-bold text-primary cursor-not-allowed': disabled,\n      'font-bold text-default-soft hover:text-default': !disabled\n    })\n  }, label), centerLabel && __jsx(React.Fragment, null, __jsx(\"label\", {\n    className: classnames('mt-0 trans w-1/3 text-center', {\n      'font-bold text-primary cursor-not-allowed': disabled,\n      'font-bold text-default-soft hover:text-default': !disabled\n    })\n  }, centerLabel)), rightLabel && __jsx(React.Fragment, null, __jsx(\"label\", {\n    className: classnames('mt-0 sm:pr-8 sm:pl-2 trans text-right', {\n      'w-1/2': rightLabel && !centerLabel,\n      'w-1/3': rightLabel && centerLabel,\n      'font-bold text-primary cursor-not-allowed': disabled,\n      'font-bold text-default-soft hover:text-default': !disabled\n    })\n  }, rightLabel))), __jsx(Input, _extends({}, props, {\n    pattern: pattern,\n    type: type || 'text'\n  })), bottomRightLabel && __jsx(React.Fragment, null, __jsx(\"label\", {\n    className: classnames('mt-0 sm:pr-8 sm:pl-2 trans w-full text-right font-bold text-default-soft hover:text-default')\n  }, bottomRightLabel)), inlineButton && __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: classnames('absolute flex items-center r-0 t-0 b-0 trans text-right font-bold pr-0')\n  }, inlineButton))));\n};","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/TextInputGroup.jsx"],"names":["React","classnames","Input","TextInputGroup","props","id","label","alignLeft","disabled","inlineButton","unsignedNumber","unsignedWholeNumber","bottomRightLabel","centerLabel","rightLabel","type","pattern","value","message"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAASC,KAAT,QAAsB,sBAAtB;AAEA,OAAO,MAAMC,cAAc,GACzBC,KAD4B,IAEzB;AACH,QAAM;AACJC,IAAAA,EADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,YALI;AAMJC,IAAAA,cANI;AAOJC,IAAAA,mBAPI;AAQJC,IAAAA,gBARI;AASJC,IAAAA,WATI;AAUJC,IAAAA;AAVI,MAWFV,KAXJ;AAaA,MAAI;AACFW,IAAAA;AADE,MAEAX,KAFJ;AAIA,MAAIY,OAAO,GAAG,EAAd;;AAEA,MAAID,IAAI,KAAK,OAAb,EAAsB;AACpBC,IAAAA,OAAO,GAAG;AACRC,MAAAA,KAAK,EAAE,0CADC;AAERC,MAAAA,OAAO,EAAE;AAFD,KAAV;AAID,GALD,MAKO,IAAIR,cAAJ,EAAoB;AACzBK,IAAAA,IAAI,GAAG,QAAP;AACAC,IAAAA,OAAO,GAAG;AACRC,MAAAA,KAAK,EAAE,aADC;AAERC,MAAAA,OAAO,EAAE;AAFD,KAAV;AAID,GANM,MAMA,IAAIP,mBAAJ,EAAyB;AAC9BI,IAAAA,IAAI,GAAG,QAAP;AACAC,IAAAA,OAAO,GAAG;AACRC,MAAAA,KAAK,EAAE,OADC;AAERC,MAAAA,OAAO,EAAE;AAFD,KAAV;AAID;;AAED,SAAO,4BACL;AACE,IAAA,SAAS,EAAEjB,UAAU,CACnB,0BADmB,EAEnB;AACE,cAAQM,SADV;AAEE,iBAAW,CAACA;AAFd,KAFmB;AADvB,KAUG,CAACD,KAAK,IAAIQ,UAAT,IAAuBD,WAAxB,KACC;AACE,IAAA,SAAS,EAAEZ,UAAU,CACnB,gCADmB;AADvB,KAKGK,KAAK,IACJ;AACE,IAAA,OAAO,EAAED,EADX;AAEE,IAAA,SAAS,EAAEJ,UAAU,CACnB,oBADmB,EAEnB;AACE,uBAAiBa,UAAU,IAAI,CAACD,WADlC;AAEE,uBAAiBC,UAAU,IAAID,WAFjC;AAGE,mDAA6CL,QAH/C;AAIE,wDAAkD,CAACA;AAJrD,KAFmB;AAFvB,KAYGF,KAZH,CANJ,EAsBGO,WAAW,IAAI,4BACd;AACE,IAAA,SAAS,EAAEZ,UAAU,CACnB,8BADmB,EAEnB;AACE,mDAA6CO,QAD/C;AAEE,wDAAkD,CAACA;AAFrD,KAFmB;AADvB,KASGK,WATH,CADc,CAtBlB,EAoCGC,UAAU,IAAI,4BACb;AACE,IAAA,SAAS,EAAEb,UAAU,CACnB,uCADmB,EAEnB;AACE,eAASa,UAAU,IAAI,CAACD,WAD1B;AAEE,eAASC,UAAU,IAAID,WAFzB;AAGE,mDAA6CL,QAH/C;AAIE,wDAAkD,CAACA;AAJrD,KAFmB;AADvB,KAWGM,UAXH,CADa,CApCjB,CAXJ,EAiEE,MAAC,KAAD,eACMV,KADN;AAEE,IAAA,OAAO,EAAEY,OAFX;AAGE,IAAA,IAAI,EAAED,IAAI,IAAI;AAHhB,KAjEF,EAuEGH,gBAAgB,IAAI,4BACnB;AACE,IAAA,SAAS,EAAEX,UAAU,CACnB,6FADmB;AADvB,KAKGW,gBALH,CADmB,CAvEvB,EAiFGH,YAAY,IAAI,4BACf;AACE,IAAA,SAAS,EAAER,UAAU,CACnB,wEADmB;AADvB,KAKGQ,YALH,CADe,CAjFnB,CADK,CAAP;AA6FD,CAtIM","sourcesContent":["import React from 'react'\nimport classnames from 'classnames'\n\nimport { Input } from 'lib/components/Input'\n\nexport const TextInputGroup = (\n  props,\n) => {\n  const {\n    id,\n    label,\n    alignLeft,\n    disabled,\n    inlineButton,\n    unsignedNumber,\n    unsignedWholeNumber,\n    bottomRightLabel,\n    centerLabel,\n    rightLabel,\n  } = props\n\n  let {\n    type\n  } = props\n\n  let pattern = {}\n\n  if (type === 'email') {\n    pattern = {\n      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n      message: 'invalid email address'\n    }\n  } else if (unsignedNumber) {\n    type = 'number'\n    pattern = {\n      value: /^\\d*\\.?\\d*$/,\n      message: 'please enter a positive number'\n    }\n  } else if (unsignedWholeNumber) {\n    type = 'number'\n    pattern = { \n      value: /^\\d+$/,\n      message: 'please enter a positive number'\n    }\n  }\n\n  return <>\n    <div\n      className={classnames(\n        'fieldset relative w-full',\n        {\n          'mx-0': alignLeft,\n          'mx-auto': !alignLeft,\n        }\n      )}\n    >\n\n      {(label || rightLabel || centerLabel) && (\n        <div\n          className={classnames(\n            'flex justify-between items-end',\n          )}>\n\n          {label && (\n            <label\n              htmlFor={id}\n              className={classnames(\n                'mt-0 sm:pr-2 trans',\n                {\n                  'sm:pl-8 w-1/2': rightLabel && !centerLabel,\n                  'sm:pl-8 w-1/3': rightLabel && centerLabel,\n                  'font-bold text-primary cursor-not-allowed': disabled,\n                  'font-bold text-default-soft hover:text-default': !disabled,\n                }\n              )}\n            >\n              {label}\n            </label>\n          )}\n\n          {centerLabel && <>\n            <label\n              className={classnames(\n                'mt-0 trans w-1/3 text-center',\n                {\n                  'font-bold text-primary cursor-not-allowed': disabled,\n                  'font-bold text-default-soft hover:text-default': !disabled,\n                }\n              )}\n            >\n              {centerLabel}\n            </label>\n          </>}\n\n          {rightLabel && <>\n            <label\n              className={classnames(\n                'mt-0 sm:pr-8 sm:pl-2 trans text-right',\n                {\n                  'w-1/2': rightLabel && !centerLabel,\n                  'w-1/3': rightLabel && centerLabel,\n                  'font-bold text-primary cursor-not-allowed': disabled,\n                  'font-bold text-default-soft hover:text-default': !disabled,\n                }\n              )}\n            >\n              {rightLabel}\n            </label>\n          </>}\n        </div>\n      )}\n      \n      <Input\n        {...props}\n        pattern={pattern}\n        type={type || 'text'}\n      />\n\n      {bottomRightLabel && <>\n        <label\n          className={classnames(\n            'mt-0 sm:pr-8 sm:pl-2 trans w-full text-right font-bold text-default-soft hover:text-default',\n          )}\n        >\n          {bottomRightLabel}\n        </label>\n      </>}\n\n      {inlineButton && <>\n        <div\n          className={classnames(\n            'absolute flex items-center r-0 t-0 b-0 trans text-right font-bold pr-0',\n          )}\n        >\n          {inlineButton}\n        </div>\n      </>}\n    </div>\n  </>\n}\n"]},"metadata":{},"sourceType":"module"}