{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { getSymbolForMetaMask } from 'lib/utils/getSymbolForMetaMask';\nexport var addTokenToMetaMask = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(networkName, pool) {\n    var _pool$prizeStrategy, _pool$prizeStrategy$s, _pool$prizeStrategy$s2, symbol, wasAdded;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            symbol = getSymbolForMetaMask(networkName, pool);\n            _context.next = 4;\n            return ethereum.request({\n              method: 'wallet_watchAsset',\n              params: {\n                type: 'ERC20',\n                options: {\n                  address: pool === null || pool === void 0 ? void 0 : (_pool$prizeStrategy = pool.prizeStrategy) === null || _pool$prizeStrategy === void 0 ? void 0 : (_pool$prizeStrategy$s = _pool$prizeStrategy.singleRandomWinner) === null || _pool$prizeStrategy$s === void 0 ? void 0 : (_pool$prizeStrategy$s2 = _pool$prizeStrategy$s.ticket) === null || _pool$prizeStrategy$s2 === void 0 ? void 0 : _pool$prizeStrategy$s2.id,\n                  symbol: symbol,\n                  // A ticker symbol or shorthand, up to 5 chars.\n                  decimals: pool === null || pool === void 0 ? void 0 : pool.underlyingCollateralDecimals,\n                  // The number of decimals in the token\n                  image: 'https://app.pooltogether.com/pooltogether-token-logo@2x.png'\n                }\n              }\n            });\n\n          case 4:\n            wasAdded = _context.sent;\n\n            if (wasAdded) {// console.log('Thanks for your interest!')\n            } else {\n              console.log('Token not added');\n            }\n\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function addTokenToMetaMask(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/services/addTokenToMetaMask.js"],"names":["getSymbolForMetaMask","addTokenToMetaMask","networkName","pool","symbol","ethereum","request","method","params","type","options","address","prizeStrategy","singleRandomWinner","ticket","id","decimals","underlyingCollateralDecimals","image","wasAdded","console","log"],"mappings":";;AAAA,SAASA,oBAAT,QAAqC,gCAArC;AAEA,OAAO,IAAMC,kBAAkB;AAAA,sEAAG,iBAAOC,WAAP,EAAoBC,IAApB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAExBC,YAAAA,MAFwB,GAEfJ,oBAAoB,CAACE,WAAD,EAAcC,IAAd,CAFL;AAAA;AAAA,mBAIPE,QAAQ,CAACC,OAAT,CAAiB;AACtCC,cAAAA,MAAM,EAAE,mBAD8B;AAEtCC,cAAAA,MAAM,EAAE;AACNC,gBAAAA,IAAI,EAAE,OADA;AAENC,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,OAAO,EAAER,IAAF,aAAEA,IAAF,8CAAEA,IAAI,CAAES,aAAR,iFAAE,oBAAqBC,kBAAvB,oFAAE,sBAAyCC,MAA3C,2DAAE,uBAAiDC,EADnD;AAEPX,kBAAAA,MAAM,EAANA,MAFO;AAEC;AACRY,kBAAAA,QAAQ,EAAEb,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEc,4BAHT;AAGuC;AAC9CC,kBAAAA,KAAK,EAAE;AAJA;AAFH;AAF8B,aAAjB,CAJO;;AAAA;AAIxBC,YAAAA,QAJwB;;AAiB9B,gBAAIA,QAAJ,EAAc,CACZ;AACD,aAFD,MAEO;AACLC,cAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD;;AArB6B;AAAA;;AAAA;AAAA;AAAA;AAuB9BD,YAAAA,OAAO,CAACC,GAAR;;AAvB8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBpB,kBAAkB;AAAA;AAAA;AAAA,GAAxB","sourcesContent":["import { getSymbolForMetaMask } from 'lib/utils/getSymbolForMetaMask'\n\nexport const addTokenToMetaMask = async (networkName, pool) => {\n  try {\n    const symbol = getSymbolForMetaMask(networkName, pool)\n\n    const wasAdded = await ethereum.request({\n      method: 'wallet_watchAsset',\n      params: {\n        type: 'ERC20',\n        options: {\n          address: pool?.prizeStrategy?.singleRandomWinner?.ticket?.id,\n          symbol, // A ticker symbol or shorthand, up to 5 chars.\n          decimals: pool?.underlyingCollateralDecimals, // The number of decimals in the token\n          image: 'https://app.pooltogether.com/pooltogether-token-logo@2x.png',\n        },\n      },\n    })\n\n    if (wasAdded) {\n      // console.log('Thanks for your interest!')\n    } else {\n      console.log('Token not added')\n    }\n  } catch (error) {\n    console.log(error)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}