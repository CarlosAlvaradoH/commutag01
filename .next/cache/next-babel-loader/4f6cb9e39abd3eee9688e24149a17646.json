{"ast":null,"code":"import { request } from 'graphql-request';\nimport { POOLTOGETHER_GRAPH_URIS } from 'lib/constants';\nimport { prizeQuery } from 'lib/queries/prizeQuery';\nexport const getGraphLootBoxData = async (chainId, poolAddress, prizeId, blockNumber) => {\n  const variables = {\n    lootBoxAddress,\n    tokenId\n  };\n  const query = prizeQuery(blockNumber);\n  let data;\n\n  try {\n    data = await request(POOLTOGETHER_GRAPH_URIS[chainId], query, variables);\n  } catch (error) {\n    console.error(JSON.stringify(error, undefined, 2));\n  }\n\n  return data;\n};","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/fetchers/getGraphLootBoxData.js"],"names":["request","POOLTOGETHER_GRAPH_URIS","prizeQuery","getGraphLootBoxData","chainId","poolAddress","prizeId","blockNumber","variables","lootBoxAddress","tokenId","query","data","error","console","JSON","stringify","undefined"],"mappings":"AAAA,SAASA,OAAT,QAAwB,iBAAxB;AAEA,SAASC,uBAAT,QAAwC,eAAxC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AAEA,OAAO,MAAMC,mBAAmB,GAAG,OAAOC,OAAP,EAAgBC,WAAhB,EAA6BC,OAA7B,EAAsCC,WAAtC,KAAsD;AACvF,QAAMC,SAAS,GAAG;AAChBC,IAAAA,cADgB;AAEhBC,IAAAA;AAFgB,GAAlB;AAKA,QAAMC,KAAK,GAAGT,UAAU,CAACK,WAAD,CAAxB;AAEA,MAAIK,IAAJ;;AACA,MAAI;AACFA,IAAAA,IAAI,GAAG,MAAMZ,OAAO,CAClBC,uBAAuB,CAACG,OAAD,CADL,EAElBO,KAFkB,EAGlBH,SAHkB,CAApB;AAKD,GAND,CAME,OAAOK,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcE,IAAI,CAACC,SAAL,CAAeH,KAAf,EAAsBI,SAAtB,EAAiC,CAAjC,CAAd;AACD;;AAED,SAAOL,IAAP;AACD,CApBM","sourcesContent":["import { request } from 'graphql-request'\n\nimport { POOLTOGETHER_GRAPH_URIS } from 'lib/constants'\nimport { prizeQuery } from 'lib/queries/prizeQuery'\n\nexport const getGraphLootBoxData = async (chainId, poolAddress, prizeId, blockNumber) => {\n  const variables = {\n    lootBoxAddress,\n    tokenId,\n  }\n\n  const query = prizeQuery(blockNumber)\n\n  let data\n  try {\n    data = await request(\n      POOLTOGETHER_GRAPH_URIS[chainId],\n      query,\n      variables\n    )\n  } catch (error) {\n    console.error(JSON.stringify(error, undefined, 2))\n  }\n\n  return data\n}\n"]},"metadata":{},"sourceType":"module"}