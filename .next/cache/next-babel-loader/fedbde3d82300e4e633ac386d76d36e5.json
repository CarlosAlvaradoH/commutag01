{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _s = $RefreshSig$();\n\nimport { useQuery } from 'react-query';\nimport { MAINNET_POLLING_INTERVAL, QUERY_KEYS } from 'lib/constants';\nimport { fetchExternalLootBoxData } from 'lib/utils/fetchExternalLootBoxData';\nexport function useEthereumLootBoxQuery(pauseQueries, chainId, lootBoxAddress, tokenId) {\n  _s();\n\n  var enabled = !pauseQueries && chainId && Boolean(lootBoxAddress) && Boolean(tokenId);\n  return useQuery([QUERY_KEYS.ethereumLootBoxQuery, chainId, poolAddress, -1], /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetchExternalLootBoxData(params);\n\n          case 2:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), {\n    enabled: enabled,\n    refetchInterval: MAINNET_POLLING_INTERVAL\n  });\n}\n\n_s(useEthereumLootBoxQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/hooks/useEthereumLootBoxQuery.js"],"names":["useQuery","MAINNET_POLLING_INTERVAL","QUERY_KEYS","fetchExternalLootBoxData","useEthereumLootBoxQuery","pauseQueries","chainId","lootBoxAddress","tokenId","enabled","Boolean","ethereumLootBoxQuery","poolAddress","params","refetchInterval"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,aAAzB;AAEA,SACEC,wBADF,EAEEC,UAFF,QAGO,eAHP;AAIA,SAASC,wBAAT,QAAyC,oCAAzC;AAEA,OAAO,SAASC,uBAAT,CAAiCC,YAAjC,EAA+CC,OAA/C,EAAwDC,cAAxD,EAAwEC,OAAxE,EAAiF;AAAA;;AACtF,MAAMC,OAAO,GAAG,CAACJ,YAAD,IACdC,OADc,IAEdI,OAAO,CAACH,cAAD,CAFO,IAGdG,OAAO,CAACF,OAAD,CAHT;AAKA,SAAOR,QAAQ,CACb,CAACE,UAAU,CAACS,oBAAZ,EAAkCL,OAAlC,EAA2CM,WAA3C,EAAwD,CAAC,CAAzD,CADa,wEAEb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkBT,wBAAwB,CAACU,MAAD,CAA1C;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFa,IAGb;AACEJ,IAAAA,OAAO,EAAPA,OADF;AAEEK,IAAAA,eAAe,EAAEb;AAFnB,GAHa,CAAf;AAQD;;GAdeG,uB;UAMPJ,Q","sourcesContent":["import { useQuery } from 'react-query'\n\nimport {\n  MAINNET_POLLING_INTERVAL,\n  QUERY_KEYS,\n} from 'lib/constants'\nimport { fetchExternalLootBoxData } from 'lib/utils/fetchExternalLootBoxData'\n\nexport function useEthereumLootBoxQuery(pauseQueries, chainId, lootBoxAddress, tokenId) {\n  const enabled = !pauseQueries &&\n    chainId &&\n    Boolean(lootBoxAddress) &&\n    Boolean(tokenId)\n\n  return useQuery(\n    [QUERY_KEYS.ethereumLootBoxQuery, chainId, poolAddress, -1],\n    async () => await fetchExternalLootBoxData(params),\n    {\n      enabled,\n      refetchInterval: MAINNET_POLLING_INTERVAL\n    }\n  )\n}\n"]},"metadata":{},"sourceType":"module"}