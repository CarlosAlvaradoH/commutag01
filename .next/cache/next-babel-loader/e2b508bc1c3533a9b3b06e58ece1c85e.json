{"ast":null,"code":"import { useContext } from 'react';\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider';\nimport { useTimeTravelPoolQuery } from 'lib/hooks/useTimeTravelPoolQuery';\nexport function TimeTravelPoolQuery(props) {\n  const {\n    blockNumber,\n    children,\n    poolAddress\n  } = props;\n  const {\n    chainId,\n    pauseQueries\n  } = useContext(AuthControllerContext);\n  const {\n    status,\n    data,\n    error,\n    isFetching\n  } = useTimeTravelPoolQuery(pauseQueries, chainId, poolAddress, blockNumber);\n\n  if (error) {\n    console.warn(error);\n  }\n\n  return children(data);\n}","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/TimeTravelPoolQuery.jsx"],"names":["useContext","AuthControllerContext","useTimeTravelPoolQuery","TimeTravelPoolQuery","props","blockNumber","children","poolAddress","chainId","pauseQueries","status","data","error","isFetching","console","warn"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AAEA,SAASC,qBAAT,QAAsC,+DAAtC;AACA,SAASC,sBAAT,QAAuC,kCAAvC;AAEA,OAAO,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AACzC,QAAM;AACJC,IAAAA,WADI;AAEJC,IAAAA,QAFI;AAGJC,IAAAA;AAHI,MAIFH,KAJJ;AAMA,QAAM;AAAEI,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA4BT,UAAU,CAACC,qBAAD,CAA5C;AAEA,QAAM;AAAES,IAAAA,MAAF;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA,KAAhB;AAAuBC,IAAAA;AAAvB,MAAsCX,sBAAsB,CAACO,YAAD,EAAeD,OAAf,EAAwBD,WAAxB,EAAqCF,WAArC,CAAlE;;AAEA,MAAIO,KAAJ,EAAW;AACTE,IAAAA,OAAO,CAACC,IAAR,CAAaH,KAAb;AACD;;AAED,SAAON,QAAQ,CAACK,IAAD,CAAf;AACD","sourcesContent":["import { useContext } from 'react'\n\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider'\nimport { useTimeTravelPoolQuery } from 'lib/hooks/useTimeTravelPoolQuery'\n\nexport function TimeTravelPoolQuery(props) {\n  const {\n    blockNumber,\n    children,\n    poolAddress,\n  } = props\n\n  const { chainId, pauseQueries } = useContext(AuthControllerContext)\n\n  const { status, data, error, isFetching } = useTimeTravelPoolQuery(pauseQueries, chainId, poolAddress, blockNumber)\n\n  if (error) {\n    console.warn(error)\n  }\n\n  return children(data)\n}\n"]},"metadata":{},"sourceType":"module"}