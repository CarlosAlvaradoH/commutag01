{"ast":null,"code":"import { batch, contract } from '@pooltogether/etherplex';\nimport LootBoxControllerAbi from '@pooltogether/loot-box/abis/LootBoxController';\n\nconst debug = require('debug')('pool-app:fetchExternalLootBoxData');\n\nexport const fetchExternalLootBoxData = async (provider, lootBoxAddress, tokenId) => {\n  console.log(provider);\n  console.log(lootBoxAddress);\n  console.log(tokenId);\n\n  try {\n    var _values$lootBoxContro, _values$lootBoxContro2;\n\n    const etherplexLootBoxControllerContract = contract('lootBoxController', LootBoxControllerAbi, lootBoxAddress);\n    const values = await batch(provider, etherplexLootBoxControllerContract.computeAddress(lootBoxAddress, tokenId));\n    console.log(values);\n    return {\n      computedLootBoxAddress: values === null || values === void 0 ? void 0 : (_values$lootBoxContro = values.lootBoxController) === null || _values$lootBoxContro === void 0 ? void 0 : (_values$lootBoxContro2 = _values$lootBoxContro.computeAddress) === null || _values$lootBoxContro2 === void 0 ? void 0 : _values$lootBoxContro2[0],\n      loading: false\n    };\n  } catch (e) {\n    throw {\n      name: 'fetchExternalLootBoxData Error',\n      message: `Error from Infura was: ${e.message}`\n    };\n  }\n};","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/utils/fetchExternalLootBoxData.js"],"names":["batch","contract","LootBoxControllerAbi","debug","require","fetchExternalLootBoxData","provider","lootBoxAddress","tokenId","console","log","etherplexLootBoxControllerContract","values","computeAddress","computedLootBoxAddress","lootBoxController","loading","e","name","message"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,yBAAhC;AAEA,OAAOC,oBAAP,MAAiC,+CAAjC;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,mCAAjB,CAAd;;AAEA,OAAO,MAAMC,wBAAwB,GAAG,OACtCC,QADsC,EAEtCC,cAFsC,EAGtCC,OAHsC,KAInC;AACHC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,cAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AAEA,MAAI;AAAA;;AACF,UAAMG,kCAAkC,GAAGV,QAAQ,CACjD,mBADiD,EAEjDC,oBAFiD,EAGjDK,cAHiD,CAAnD;AAMA,UAAMK,MAAM,GAAG,MAAMZ,KAAK,CACxBM,QADwB,EAExBK,kCAAkC,CAC/BE,cADH,CACkBN,cADlB,EACkCC,OADlC,CAFwB,CAA1B;AAKAC,IAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AAEA,WAAO;AACLE,MAAAA,sBAAsB,EAAEF,MAAF,aAAEA,MAAF,gDAAEA,MAAM,CAAEG,iBAAV,oFAAE,sBAA2BF,cAA7B,2DAAE,uBAA4C,CAA5C,CADnB;AAELG,MAAAA,OAAO,EAAE;AAFJ,KAAP;AAID,GAlBD,CAkBE,OAAOC,CAAP,EAAU;AACV,UAAM;AACJC,MAAAA,IAAI,EAAE,gCADF;AAEJC,MAAAA,OAAO,EAAG,0BAAyBF,CAAC,CAACE,OAAQ;AAFzC,KAAN;AAID;AACF,CAjCM","sourcesContent":["import { batch, contract } from '@pooltogether/etherplex'\n\nimport LootBoxControllerAbi from '@pooltogether/loot-box/abis/LootBoxController'\n\nconst debug = require('debug')('pool-app:fetchExternalLootBoxData')\n\nexport const fetchExternalLootBoxData = async (\n  provider,\n  lootBoxAddress,\n  tokenId,\n) => {\n  console.log(provider)\n  console.log(lootBoxAddress)\n  console.log(tokenId)\n\n  try {\n    const etherplexLootBoxControllerContract = contract(\n      'lootBoxController',\n      LootBoxControllerAbi,\n      lootBoxAddress\n    )\n\n    const values = await batch(\n      provider,\n      etherplexLootBoxControllerContract\n        .computeAddress(lootBoxAddress, tokenId)\n    )\n    console.log(values)\n\n    return {\n      computedLootBoxAddress: values?.lootBoxController?.computeAddress?.[0],\n      loading: false\n    }\n  } catch (e) {\n    throw {\n      name: 'fetchExternalLootBoxData Error',\n      message: `Error from Infura was: ${e.message}`\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}