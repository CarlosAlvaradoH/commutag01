{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Cookies from 'js-cookie';\nimport * as Sentry from '@sentry/react';\nimport { SELECTED_WALLET_COOKIE_KEY } from 'lib/constants';\nimport { WalletContext } from 'lib/components/contextProviders/WalletContextProvider';\nimport { ErrorPage } from 'lib/components/ErrorPage';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return {\n      hasError: true\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return __jsx(\"h1\", null, \"Something went wrong.\");\n    }\n\n    return this.props.children;\n  }\n\n}\n\nexport function CustomErrorBoundary(props) {\n  const {\n    children\n  } = props;\n  const {\n    onboardWallet\n  } = useContext(WalletContext);\n  let walletName = onboardWallet === null || onboardWallet === void 0 ? void 0 : onboardWallet.name;\n\n  if (!walletName) {\n    walletName = Cookies.get(SELECTED_WALLET_COOKIE_KEY);\n  }\n\n  if (!process.env.NEXT_JS_SENTRY_DSN) {\n    return __jsx(ErrorBoundary, null, children);\n  } else {\n    return __jsx(React.Fragment, null, __jsx(Sentry.ErrorBoundary, {\n      beforeCapture: scope => {\n        scope.setTag('web3', walletName);\n        scope.setContext('wallet', {\n          name: walletName\n        });\n      },\n      fallback: ({\n        error,\n        componentStack,\n        resetError\n      }) => __jsx(ErrorPage, null)\n    }, children));\n  }\n}","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/CustomErrorBoundary.jsx"],"names":["React","useContext","Cookies","Sentry","SELECTED_WALLET_COOKIE_KEY","WalletContext","ErrorPage","ErrorBoundary","Component","constructor","props","state","hasError","getDerivedStateFromError","error","componentDidCatch","errorInfo","logErrorToMyService","render","children","CustomErrorBoundary","onboardWallet","walletName","name","get","process","env","NEXT_JS_SENTRY_DSN","scope","setTag","setContext","componentStack","resetError"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AAEA,SACEC,0BADF,QAEO,eAFP;AAGA,SAASC,aAAT,QAA8B,uDAA9B;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,MAAMC,aAAN,SAA4BP,KAAK,CAACQ,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AAED,SAAOC,wBAAP,CAAgCC,KAAhC,EAAuC;AACrC;AACA,WAAO;AAAEF,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;;AAEDG,EAAAA,iBAAiB,CAACD,KAAD,EAAQE,SAAR,EAAmB;AAClC;AACAC,IAAAA,mBAAmB,CAACH,KAAD,EAAQE,SAAR,CAAnB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKP,KAAL,CAAWC,QAAf,EAAyB;AACvB;AACA,aAAO,0CAAP;AACD;;AAED,WAAO,KAAKF,KAAL,CAAWS,QAAlB;AACD;;AAvByC;;AA2B5C,OAAO,SAASC,mBAAT,CAA6BV,KAA7B,EAAoC;AACzC,QAAM;AAAES,IAAAA;AAAF,MAAeT,KAArB;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAoBpB,UAAU,CAACI,aAAD,CAApC;AAEA,MAAIiB,UAAU,GAAGD,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAEE,IAAhC;;AAEA,MAAI,CAACD,UAAL,EAAiB;AACfA,IAAAA,UAAU,GAAGpB,OAAO,CAACsB,GAAR,CAAYpB,0BAAZ,CAAb;AACD;;AAED,MAAI,CAACqB,OAAO,CAACC,GAAR,CAAYC,kBAAjB,EAAqC;AACnC,WAAO,MAAC,aAAD,QACJR,QADI,CAAP;AAGD,GAJD,MAIO;AACL,WAAO,4BACL,MAAC,MAAD,CAAQ,aAAR;AACE,MAAA,aAAa,EAAGS,KAAD,IAAW;AACxBA,QAAAA,KAAK,CAACC,MAAN,CAAa,MAAb,EAAqBP,UAArB;AAEAM,QAAAA,KAAK,CAACE,UAAN,CAAiB,QAAjB,EAA2B;AACzBP,UAAAA,IAAI,EAAED;AADmB,SAA3B;AAGD,OAPH;AAQE,MAAA,QAAQ,EAAE,CAAC;AAAER,QAAAA,KAAF;AAASiB,QAAAA,cAAT;AAAyBC,QAAAA;AAAzB,OAAD,KACR,MAAC,SAAD;AATJ,OAYGb,QAZH,CADK,CAAP;AAgBD;AACF","sourcesContent":["import React, { useContext } from 'react'\nimport Cookies from 'js-cookie'\nimport * as Sentry from '@sentry/react'\n\nimport {\n  SELECTED_WALLET_COOKIE_KEY\n} from 'lib/constants'\nimport { WalletContext } from 'lib/components/contextProviders/WalletContextProvider'\nimport { ErrorPage } from 'lib/components/ErrorPage'\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // You can also log the error to an error reporting service\n    logErrorToMyService(error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\n\nexport function CustomErrorBoundary(props) {\n  const { children } = props\n  const { onboardWallet } = useContext(WalletContext)\n\n  let walletName = onboardWallet?.name\n\n  if (!walletName) {\n    walletName = Cookies.get(SELECTED_WALLET_COOKIE_KEY)\n  }\n\n  if (!process.env.NEXT_JS_SENTRY_DSN) {\n    return <ErrorBoundary>\n      {children}\n    </ErrorBoundary>\n  } else {\n    return <>\n      <Sentry.ErrorBoundary\n        beforeCapture={(scope) => {\n          scope.setTag('web3', walletName)\n\n          scope.setContext('wallet', {\n            name: walletName\n          })\n        }}\n        fallback={({ error, componentStack, resetError }) => (\n          <ErrorPage />\n        )}\n      >\n        {children}\n      </Sentry.ErrorBoundary>\n    </>\n  }\n}"]},"metadata":{},"sourceType":"module"}