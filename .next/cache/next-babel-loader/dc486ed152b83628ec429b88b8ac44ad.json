{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\n\nvar _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useContext } from 'react';\nimport Cookies from 'js-cookie';\nimport * as Sentry from '@sentry/react';\nimport { SELECTED_WALLET_COOKIE_KEY } from 'lib/constants';\nimport { WalletContext } from 'lib/components/contextProviders/WalletContextProvider';\nimport { ErrorPage } from 'lib/components/ErrorPage';\n\nvar ErrorBoundary = /*#__PURE__*/function (_React$Component) {\n  _inherits(ErrorBoundary, _React$Component);\n\n  var _super = _createSuper(ErrorBoundary);\n\n  function ErrorBoundary(props) {\n    var _this;\n\n    _classCallCheck(this, ErrorBoundary);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      hasError: false\n    };\n    return _this;\n  }\n\n  _createClass(ErrorBoundary, [{\n    key: \"render\",\n    // componentDidCatch(error, errorInfo) {\n    //   // You can also log the error to an error reporting service\n    //   logErrorToMyService(error, errorInfo)\n    // }\n    value: function render() {\n      if (this.state.hasError) {\n        return __jsx(ErrorPage, null);\n      }\n\n      return this.props.children;\n    }\n  }], [{\n    key: \"getDerivedStateFromError\",\n    value: function getDerivedStateFromError(error) {\n      // Update state so the next render will show the fallback UI.\n      return {\n        hasError: true\n      };\n    }\n  }]);\n\n  return ErrorBoundary;\n}(React.Component);\n\nexport function CustomErrorBoundary(props) {\n  _s();\n\n  var children = props.children;\n\n  var _useContext = useContext(WalletContext),\n      onboardWallet = _useContext.onboardWallet;\n\n  var walletName = onboardWallet === null || onboardWallet === void 0 ? void 0 : onboardWallet.name;\n\n  if (!walletName) {\n    walletName = Cookies.get(SELECTED_WALLET_COOKIE_KEY);\n  }\n\n  if (!process.env.NEXT_JS_SENTRY_DSN) {\n    return __jsx(ErrorBoundary, null, children);\n  } else {\n    return __jsx(React.Fragment, null, __jsx(Sentry.ErrorBoundary, {\n      beforeCapture: function beforeCapture(scope) {\n        scope.setTag('web3', walletName);\n        scope.setContext('wallet', {\n          name: walletName\n        });\n      },\n      fallback: function fallback(_ref) {\n        var error = _ref.error,\n            componentStack = _ref.componentStack,\n            resetError = _ref.resetError;\n        return __jsx(ErrorPage, null);\n      }\n    }, children));\n  }\n}\n\n_s(CustomErrorBoundary, \"ujS2WRzGcQcon3uvFRfwP5zOg08=\");\n\n_c = CustomErrorBoundary;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomErrorBoundary\");","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/CustomErrorBoundary.jsx"],"names":["React","useContext","Cookies","Sentry","SELECTED_WALLET_COOKIE_KEY","WalletContext","ErrorPage","ErrorBoundary","props","state","hasError","children","error","Component","CustomErrorBoundary","onboardWallet","walletName","name","get","process","env","NEXT_JS_SENTRY_DSN","scope","setTag","setContext","componentStack","resetError"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,KAAKC,MAAZ,MAAwB,eAAxB;AAEA,SACEC,0BADF,QAEO,eAFP;AAGA,SAASC,aAAT,QAA8B,uDAA9B;AACA,SAASC,SAAT,QAA0B,0BAA1B;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAFiB;AAGlB;;;;AAOD;AACA;AACA;AACA;6BAES;AACP,UAAI,KAAKD,KAAL,CAAWC,QAAf,EAAyB;AACvB,eAAO,MAAC,SAAD,OAAP;AACD;;AAED,aAAO,KAAKF,KAAL,CAAWG,QAAlB;AACD;;;6CAhB+BC,K,EAAO;AACrC;AACA,aAAO;AAAEF,QAAAA,QAAQ,EAAE;AAAZ,OAAP;AACD;;;;EATyBV,KAAK,CAACa,S;;AA0BlC,OAAO,SAASC,mBAAT,CAA6BN,KAA7B,EAAoC;AAAA;;AAAA,MACjCG,QADiC,GACpBH,KADoB,CACjCG,QADiC;;AAAA,oBAEfV,UAAU,CAACI,aAAD,CAFK;AAAA,MAEjCU,aAFiC,eAEjCA,aAFiC;;AAIzC,MAAIC,UAAU,GAAGD,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAEE,IAAhC;;AAEA,MAAI,CAACD,UAAL,EAAiB;AACfA,IAAAA,UAAU,GAAGd,OAAO,CAACgB,GAAR,CAAYd,0BAAZ,CAAb;AACD;;AAED,MAAI,CAACe,OAAO,CAACC,GAAR,CAAYC,kBAAjB,EAAqC;AACnC,WAAO,MAAC,aAAD,QACJV,QADI,CAAP;AAGD,GAJD,MAIO;AACL,WAAO,4BACL,MAAC,MAAD,CAAQ,aAAR;AACE,MAAA,aAAa,EAAE,uBAACW,KAAD,EAAW;AACxBA,QAAAA,KAAK,CAACC,MAAN,CAAa,MAAb,EAAqBP,UAArB;AAEAM,QAAAA,KAAK,CAACE,UAAN,CAAiB,QAAjB,EAA2B;AACzBP,UAAAA,IAAI,EAAED;AADmB,SAA3B;AAGD,OAPH;AAQE,MAAA,QAAQ,EAAE;AAAA,YAAGJ,KAAH,QAAGA,KAAH;AAAA,YAAUa,cAAV,QAAUA,cAAV;AAAA,YAA0BC,UAA1B,QAA0BA,UAA1B;AAAA,eACR,MAAC,SAAD,OADQ;AAAA;AARZ,OAYGf,QAZH,CADK,CAAP;AAgBD;AACF;;GAhCeG,mB;;KAAAA,mB","sourcesContent":["import React, { useContext } from 'react'\nimport Cookies from 'js-cookie'\nimport * as Sentry from '@sentry/react'\n\nimport {\n  SELECTED_WALLET_COOKIE_KEY\n} from 'lib/constants'\nimport { WalletContext } from 'lib/components/contextProviders/WalletContextProvider'\nimport { ErrorPage } from 'lib/components/ErrorPage'\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  // componentDidCatch(error, errorInfo) {\n  //   // You can also log the error to an error reporting service\n  //   logErrorToMyService(error, errorInfo)\n  // }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorPage />\n    }\n\n    return this.props.children\n  }\n}\n\n\nexport function CustomErrorBoundary(props) {\n  const { children } = props\n  const { onboardWallet } = useContext(WalletContext)\n\n  let walletName = onboardWallet?.name\n\n  if (!walletName) {\n    walletName = Cookies.get(SELECTED_WALLET_COOKIE_KEY)\n  }\n\n  if (!process.env.NEXT_JS_SENTRY_DSN) {\n    return <ErrorBoundary>\n      {children}\n    </ErrorBoundary>\n  } else {\n    return <>\n      <Sentry.ErrorBoundary\n        beforeCapture={(scope) => {\n          scope.setTag('web3', walletName)\n\n          scope.setContext('wallet', {\n            name: walletName\n          })\n        }}\n        fallback={({ error, componentStack, resetError }) => (\n          <ErrorPage />\n        )}\n      >\n        {children}\n      </Sentry.ErrorBoundary>\n    </>\n  }\n}"]},"metadata":{},"sourceType":"module"}