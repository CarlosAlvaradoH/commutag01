{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useContext } from 'react';\nimport Link from 'next/link';\nimport { compact } from 'lodash';\nimport { useTranslation } from 'lib/../i18n';\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider'; // import { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider'\n\nimport { TableRowUILoader } from 'lib/components/TableRowUILoader';\nimport { TimeTravelPool } from 'lib/components/TimeTravelPool';\nimport { usePoolPrizesQuery } from 'lib/hooks/usePoolPrizesQuery';\nimport { displayAmountInEther } from 'lib/utils/displayAmountInEther';\nimport { extractPrizeNumberFromPrize } from 'lib/utils/extractPrizeNumberFromPrize';\nimport { formatDate } from 'lib/utils/formatDate';\nimport { shorten } from 'lib/utils/shorten';\nexport const LastWinnersListing = props => {\n  var _data$prizePool, _prizes, _prizes2;\n\n  const {\n    t\n  } = useTranslation();\n  const {\n    pool\n  } = props;\n  const decimals = pool === null || pool === void 0 ? void 0 : pool.underlyingCollateralDecimals;\n  const {\n    chainId,\n    pauseQueries\n  } = useContext(AuthControllerContext);\n  const first = 5;\n  const {\n    status,\n    data,\n    error,\n    isFetching\n  } = usePoolPrizesQuery(pauseQueries, chainId, pool, first);\n  let prizes = compact([].concat(data === null || data === void 0 ? void 0 : (_data$prizePool = data.prizePool) === null || _data$prizePool === void 0 ? void 0 : _data$prizePool.prizes));\n  prizes = (_prizes = prizes) === null || _prizes === void 0 ? void 0 : _prizes.reduce(function (result, prize) {\n    if (prize.winners && prize.winners.length > 0) {\n      const date = formatDate(prize === null || prize === void 0 ? void 0 : prize.awardedTimestamp, {\n        short: true,\n        year: false,\n        noAbbrev: true\n      });\n      result.push(_objectSpread(_objectSpread({}, prize), {}, {\n        date,\n        prizeNumber: extractPrizeNumberFromPrize(prize),\n        address: prize === null || prize === void 0 ? void 0 : prize.winners[0],\n        winnings: prize === null || prize === void 0 ? void 0 : prize.amount\n      }));\n    }\n\n    return result;\n  }, []);\n\n  if (!prizes && prizes !== null) {\n    return __jsx(TableRowUILoader, {\n      rows: 5\n    });\n  }\n\n  return __jsx(React.Fragment, null, error && __jsx(React.Fragment, null, t('thereWasAnErrorLoadingTheLastFiveWinners'), error.message), prizes && ((_prizes2 = prizes) === null || _prizes2 === void 0 ? void 0 : _prizes2.length) === 0 ? __jsx(React.Fragment, null, __jsx(\"h6\", null, t('noWinnersAwardedYet'))) : __jsx(React.Fragment, null, __jsx(Link, {\n    href: \"/prizes/[symbol]/[prizeNumber]\",\n    as: `/prizes/${pool === null || pool === void 0 ? void 0 : pool.symbol}/${pool === null || pool === void 0 ? void 0 : pool.currentPrizeId}`\n  }, __jsx(\"a\", {\n    className: \"block font-bold mb-2 rounded-lg trans\"\n  }, __jsx(\"span\", {\n    className: \"inline-block w-1/2 sm:w-1/2 text-flashy\"\n  }, t('currentPrize')), __jsx(\"span\", {\n    className: \"inline-block w-1/2 sm:w-1/2 text-right text-flashy\"\n  }, \"$\", displayAmountInEther(pool === null || pool === void 0 ? void 0 : pool.prizeAmountUSD.toString(), {\n    decimals,\n    precision: 2\n  })))), prizes.map(prize => {\n    return __jsx(Link, {\n      key: `last-winners-${prize === null || prize === void 0 ? void 0 : prize.address}-${prize === null || prize === void 0 ? void 0 : prize.winnings}`,\n      href: \"/prizes/[symbol]/[prizeNumber]\",\n      as: `/prizes/${pool === null || pool === void 0 ? void 0 : pool.symbol}/${prize === null || prize === void 0 ? void 0 : prize.prizeNumber}`\n    }, __jsx(\"a\", {\n      className: \"block font-bold mb-2 rounded-lg trans sm:text-xxs\"\n    }, __jsx(\"span\", {\n      className: \"inline-block w-1/3 sm:w-3/12\"\n    }, prize === null || prize === void 0 ? void 0 : prize.date), __jsx(\"span\", {\n      className: \"inline-block w-1/3 sm:w-5/12\"\n    }, shorten(prize === null || prize === void 0 ? void 0 : prize.address)), __jsx(\"span\", {\n      className: \"inline-block w-1/3 sm:w-4/12 text-right\"\n    }, __jsx(TimeTravelPool, {\n      blockNumber: parseInt(prize === null || prize === void 0 ? void 0 : prize.awardedBlock, 10),\n      poolAddress: pool === null || pool === void 0 ? void 0 : pool.poolAddress,\n      querySymbol: pool === null || pool === void 0 ? void 0 : pool.symbol,\n      prize: prize\n    }, timeTravelPool => {\n      return __jsx(React.Fragment, null, \"$\", displayAmountInEther(timeTravelPool === null || timeTravelPool === void 0 ? void 0 : timeTravelPool.prizeAmountUSD.toString(), {\n        decimals,\n        precision: 2\n      }));\n    }))));\n  })));\n};","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/LastWinnersListing.jsx"],"names":["React","useContext","Link","compact","useTranslation","AuthControllerContext","TableRowUILoader","TimeTravelPool","usePoolPrizesQuery","displayAmountInEther","extractPrizeNumberFromPrize","formatDate","shorten","LastWinnersListing","props","t","pool","decimals","underlyingCollateralDecimals","chainId","pauseQueries","first","status","data","error","isFetching","prizes","concat","prizePool","reduce","result","prize","winners","length","date","awardedTimestamp","short","year","noAbbrev","push","prizeNumber","address","winnings","amount","message","symbol","currentPrizeId","prizeAmountUSD","toString","precision","map","parseInt","awardedBlock","poolAddress","timeTravelPool"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport Link from 'next/link'\nimport { compact } from 'lodash'\n\nimport { useTranslation } from 'lib/../i18n'\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider'\n// import { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider'\nimport { TableRowUILoader } from 'lib/components/TableRowUILoader'\nimport { TimeTravelPool } from 'lib/components/TimeTravelPool'\nimport { usePoolPrizesQuery } from 'lib/hooks/usePoolPrizesQuery'\nimport { displayAmountInEther } from 'lib/utils/displayAmountInEther'\nimport { extractPrizeNumberFromPrize } from 'lib/utils/extractPrizeNumberFromPrize'\nimport { formatDate } from 'lib/utils/formatDate'\nimport { shorten } from 'lib/utils/shorten'\n\nexport const LastWinnersListing = (\n  props,\n) => {\n  const { t } = useTranslation()\n  const { pool } = props\n\n  const decimals = pool?.underlyingCollateralDecimals\n\n  const { chainId, pauseQueries } = useContext(AuthControllerContext)\n\n\n\n  const first = 5\n  const { status, data, error, isFetching } = usePoolPrizesQuery(pauseQueries, chainId, pool, first)\n\n\n\n\n  let prizes = compact([].concat(data?.prizePool?.prizes))\n\n  prizes = prizes?.reduce(function (result, prize) {\n    if (prize.winners && prize.winners.length > 0) {\n      const date = formatDate(prize?.awardedTimestamp, { short: true, year: false, noAbbrev: true })\n      result.push({\n        ...prize,\n        date,\n        prizeNumber: extractPrizeNumberFromPrize(prize),\n        address: prize?.winners[0],\n        winnings: prize?.amount\n      })\n    }\n    return result\n  }, [])\n\n  if (!prizes && prizes !== null) {\n    return <TableRowUILoader\n      rows={5}\n    />\n  }\n\n  return <>\n    {error && <>\n      {t('thereWasAnErrorLoadingTheLastFiveWinners')}\n      {error.message}\n    </>}\n\n    {prizes && prizes?.length === 0 ? <>\n      <h6>\n        {t('noWinnersAwardedYet')}\n      </h6>\n    </> : <>\n        <Link\n          href='/prizes/[symbol]/[prizeNumber]'\n          as={`/prizes/${pool?.symbol}/${pool?.currentPrizeId}`}\n        >\n          <a\n            className='block font-bold mb-2 rounded-lg trans'\n          >\n            <span\n              className='inline-block w-1/2 sm:w-1/2 text-flashy'\n            >\n              {t('currentPrize')}\n            </span>\n            <span\n              className='inline-block w-1/2 sm:w-1/2 text-right text-flashy'\n            >\n              ${displayAmountInEther(\n                pool?.prizeAmountUSD.toString(),\n                { decimals, precision: 2 }\n              )}\n            </span>\n          </a>\n        </Link>\n\n      {prizes.map(prize => {\n        return <Link\n          key={`last-winners-${prize?.address}-${prize?.winnings}`}\n          href='/prizes/[symbol]/[prizeNumber]'\n          as={`/prizes/${pool?.symbol}/${prize?.prizeNumber}`}\n        >\n          <a\n            className='block font-bold mb-2 rounded-lg trans sm:text-xxs'\n          >\n            <span\n              className='inline-block w-1/3 sm:w-3/12'\n            >\n              {prize?.date}\n            </span>\n            <span\n              className='inline-block w-1/3 sm:w-5/12'\n            >\n              {shorten(prize?.address)}\n            </span>\n            <span\n              className='inline-block w-1/3 sm:w-4/12 text-right'\n            >\n              <TimeTravelPool\n                blockNumber={parseInt(prize?.awardedBlock, 10)}\n                poolAddress={pool?.poolAddress}\n                querySymbol={pool?.symbol}\n                prize={prize}\n              >\n                {(timeTravelPool) => {\n                  return <>\n                    ${displayAmountInEther(\n                      timeTravelPool?.prizeAmountUSD.toString(),\n                      { decimals, precision: 2 }\n                    )}\n                  </>\n                }}\n              </TimeTravelPool>\n              \n            </span>\n          </a>\n        </Link>\n      })}\n    </>}\n  </>\n}\n"]},"metadata":{},"sourceType":"module"}