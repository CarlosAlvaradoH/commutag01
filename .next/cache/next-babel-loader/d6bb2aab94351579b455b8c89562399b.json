{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport classnames from 'classnames';\nimport FeatherIcon from 'feather-icons-react';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { useTranslation } from 'lib/../i18n';\nimport { poolToast } from 'lib/utils/poolToast';\nexport var PTCopyToClipboard = function PTCopyToClipboard(props) {\n  _s();\n\n  var text = props.text,\n      textShort = props.textShort,\n      widths = props.widths;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var handleCopy = function handleCopy() {\n    poolToast.success(t('copiedToClipboard'));\n  };\n\n  var defaultWidths = 'w-full sm:w-8/12 lg:w-1/2';\n  return __jsx(React.Fragment, null, __jsx(CopyToClipboard, {\n    text: text,\n    onCopy: handleCopy\n  }, __jsx(\"a\", {\n    className: classnames(widths ? widths : defaultWidths, 'flex items-center cursor-pointer stroke-current text-inverse hover:text-white', 'h-8 py-1 xs:mb-2 sm:mb-0 bg-primary hover:bg-highlight-2 rounded-sm trans'),\n    title: \"Copy to clipboard\"\n  }, __jsx(\"span\", {\n    className: \"px-2 sm:px-6 flex-grow text-xxs xs:text-xs w-16 truncate\"\n  }, textShort || text), __jsx(FeatherIcon, {\n    icon: \"copy\",\n    className: \"w-4 h-4 mx-1 sm:mx-6 my-1 justify-self-end\"\n  }))));\n};\n\n_s(PTCopyToClipboard, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = PTCopyToClipboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PTCopyToClipboard\");","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/PTCopyToClipboard.jsx"],"names":["React","classnames","FeatherIcon","CopyToClipboard","useTranslation","poolToast","PTCopyToClipboard","props","text","textShort","widths","t","handleCopy","success","defaultWidths"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;AAEA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,SAAT,QAA0B,qBAA1B;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AAAA;;AAAA,MAClCC,IADkC,GACND,KADM,CAClCC,IADkC;AAAA,MAC5BC,SAD4B,GACNF,KADM,CAC5BE,SAD4B;AAAA,MACjBC,MADiB,GACNH,KADM,CACjBG,MADiB;;AAAA,wBAG5BN,cAAc,EAHc;AAAA,MAGlCO,CAHkC,mBAGlCA,CAHkC;;AAK1C,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBP,IAAAA,SAAS,CAACQ,OAAV,CAAkBF,CAAC,CAAC,mBAAD,CAAnB;AACD,GAFD;;AAIA,MAAMG,aAAa,GAAG,2BAAtB;AAEA,SAAO,4BACL,MAAC,eAAD;AACE,IAAA,IAAI,EAAEN,IADR;AAEE,IAAA,MAAM,EAAEI;AAFV,KAIE;AACE,IAAA,SAAS,EAAEX,UAAU,CACnBS,MAAM,GAAGA,MAAH,GAAYI,aADC,EAEnB,+EAFmB,EAGnB,2EAHmB,CADvB;AAME,IAAA,KAAK,EAAC;AANR,KAQE;AACE,IAAA,SAAS,EAAC;AADZ,KAEEL,SAAS,IAAID,IAFf,CARF,EAWE,MAAC,WAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,SAAS,EAAC;AAFZ,IAXF,CAJF,CADK,CAAP;AAuBD,CAlCM;;GAAMF,iB;UAGGF,c;;;KAHHE,iB","sourcesContent":["import React from 'react'\nimport classnames from 'classnames'\nimport FeatherIcon from 'feather-icons-react'\nimport CopyToClipboard from 'react-copy-to-clipboard'\n\nimport { useTranslation } from 'lib/../i18n'\nimport { poolToast } from 'lib/utils/poolToast'\n\nexport const PTCopyToClipboard = (props) => {\n  const { text, textShort, widths } = props\n\n  const { t } = useTranslation()\n\n  const handleCopy = () => {\n    poolToast.success(t('copiedToClipboard'))\n  }\n\n  const defaultWidths = 'w-full sm:w-8/12 lg:w-1/2'\n\n  return <>\n    <CopyToClipboard\n      text={text}\n      onCopy={handleCopy}\n    >\n      <a\n        className={classnames(\n          widths ? widths : defaultWidths,\n          'flex items-center cursor-pointer stroke-current text-inverse hover:text-white',\n          'h-8 py-1 xs:mb-2 sm:mb-0 bg-primary hover:bg-highlight-2 rounded-sm trans',\n        )}\n        title='Copy to clipboard'\n      >\n        <span\n          className='px-2 sm:px-6 flex-grow text-xxs xs:text-xs w-16 truncate'\n        >{textShort || text}</span>\n        <FeatherIcon\n          icon='copy'\n          className='w-4 h-4 mx-1 sm:mx-6 my-1 justify-self-end'\n        />\n      </a>\n    </CopyToClipboard>\n  </>\n}\n"]},"metadata":{},"sourceType":"module"}