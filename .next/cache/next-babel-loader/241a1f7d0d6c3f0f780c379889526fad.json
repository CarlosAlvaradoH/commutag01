{"ast":null,"code":"var _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useTranslation } from 'lib/../i18n';\nimport { DropdownGeneric } from 'lib/components/DropdownGeneric';\nimport { PTCopyToClipboard } from 'lib/components/PTCopyToClipboard';\nimport { useEthereumLootBoxQuery } from 'lib/hooks/useEthereumLootBoxQuery';\nexport function ContributeToLootBoxDropdown(props) {\n  _s();\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var pool = props.pool;\n\n  var _useGraphLootBoxQuery = useGraphLootBoxQuery(lootBoxAddress, tokenId),\n      lootBoxAddress = _useGraphLootBoxQuery.lootBoxAddress;\n\n  var _useEthereumLootBoxQu = useEthereumLootBoxQuery(lootBoxAddress, tokenId),\n      computedLootBoxAddress = _useEthereumLootBoxQu.computedLootBoxAddress;\n\n  var addressToCopy = computedLootBoxAddress || pool.poolAddress;\n  return __jsx(React.Fragment, null, __jsx(DropdownGeneric, {\n    id: \"erc-20-awards-contribute-dropdown\",\n    className: \"mt-2 xs:mt-0 text-xxs sm:text-base text-lg\",\n    label: t('contributeToTheLootBox')\n  }, __jsx(\"div\", {\n    className: \"text-inverse text-xxs xs:text-xs mr-4 xs:mr-10 w-64 xs:w-auto sm:w-auto px-5 py-3 bg-card border-2 border-secondary rounded-lg\"\n  }, __jsx(\"div\", {\n    className: \"mb-2\"\n  }, t('transferTokensToLootBoxContractAddress')), __jsx(PTCopyToClipboard, {\n    widths: \"w-full\",\n    text: addressToCopy\n  }))));\n}\n\n_s(ContributeToLootBoxDropdown, \"GQobERmmXyyljhdhsvg26fdnpCk=\", true, function () {\n  return [useTranslation, useEthereumLootBoxQuery];\n});\n\n_c = ContributeToLootBoxDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContributeToLootBoxDropdown\");","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/ContributeToLootBoxDropdown.jsx"],"names":["React","useTranslation","DropdownGeneric","PTCopyToClipboard","useEthereumLootBoxQuery","ContributeToLootBoxDropdown","props","t","pool","useGraphLootBoxQuery","lootBoxAddress","tokenId","computedLootBoxAddress","addressToCopy","poolAddress"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AACA,SAASC,uBAAT,QAAwC,mCAAxC;AAEA,OAAO,SAASC,2BAAT,CAAqCC,KAArC,EAA4C;AAAA;;AAAA,wBACnCL,cAAc,EADqB;AAAA,MACzCM,CADyC,mBACzCA,CADyC;;AAAA,MAGzCC,IAHyC,GAGhCF,KAHgC,CAGzCE,IAHyC;;AAAA,8BAKtBC,oBAAoB,CAACC,cAAD,EAAiBC,OAAjB,CALE;AAAA,MAKzCD,cALyC,yBAKzCA,cALyC;;AAAA,8BAOdN,uBAAuB,CAACM,cAAD,EAAiBC,OAAjB,CAPT;AAAA,MAOzCC,sBAPyC,yBAOzCA,sBAPyC;;AASjD,MAAMC,aAAa,GAAGD,sBAAsB,IAAIJ,IAAI,CAACM,WAArD;AAEA,SAAO,4BACL,MAAC,eAAD;AACE,IAAA,EAAE,EAAC,mCADL;AAEE,IAAA,SAAS,EAAC,4CAFZ;AAGE,IAAA,KAAK,EAAEP,CAAC,CAAC,wBAAD;AAHV,KAKE;AACE,IAAA,SAAS,EAAC;AADZ,KAGE;AAAK,IAAA,SAAS,EAAC;AAAf,KACGA,CAAC,CAAC,wCAAD,CADJ,CAHF,EAOE,MAAC,iBAAD;AACE,IAAA,MAAM,EAAC,QADT;AAEE,IAAA,IAAI,EAAEM;AAFR,IAPF,CALF,CADK,CAAP;AAoBD;;GA/BeR,2B;UACAJ,c,EAMqBG,uB;;;KAPrBC,2B","sourcesContent":["import React from 'react'\n\nimport { useTranslation } from 'lib/../i18n'\nimport { DropdownGeneric } from 'lib/components/DropdownGeneric'\nimport { PTCopyToClipboard } from 'lib/components/PTCopyToClipboard'\nimport { useEthereumLootBoxQuery } from 'lib/hooks/useEthereumLootBoxQuery'\n\nexport function ContributeToLootBoxDropdown(props) {\n  const { t } = useTranslation()\n\n  const { pool } = props\n\n  const { lootBoxAddress } = useGraphLootBoxQuery(lootBoxAddress, tokenId)\n\n  const { computedLootBoxAddress } = useEthereumLootBoxQuery(lootBoxAddress, tokenId)\n\n  const addressToCopy = computedLootBoxAddress || pool.poolAddress\n\n  return <>\n    <DropdownGeneric\n      id='erc-20-awards-contribute-dropdown'\n      className='mt-2 xs:mt-0 text-xxs sm:text-base text-lg'\n      label={t('contributeToTheLootBox')}\n    >\n      <div\n        className='text-inverse text-xxs xs:text-xs mr-4 xs:mr-10 w-64 xs:w-auto sm:w-auto px-5 py-3 bg-card border-2 border-secondary rounded-lg'\n      >\n        <div className='mb-2'>\n          {t('transferTokensToLootBoxContractAddress')}\n        </div>\n\n        <PTCopyToClipboard\n          widths='w-full'\n          text={addressToCopy}\n        />\n      </div>\n    </DropdownGeneric>\n  </>\n}"]},"metadata":{},"sourceType":"module"}