{"ast":null,"code":"import { useQuery } from 'react-query';\nimport { isEmpty } from 'lodash';\nimport { MAINNET_POLLING_INTERVAL, QUERY_KEYS } from 'lib/constants';\nimport { fetchExternalErc20Awards } from 'lib/utils/fetchExternalErc20Awards';\n\nconst getEthereumErc20Data = async params => {\n  return await fetchExternalErc20Awards(params);\n};\n\nexport function useEthereumErc20Query(pauseQueries, chainId, lootBoxAddress, tokenId) {\n  const enabled = !pauseQueries && chainId && !isEmpty(provider) && !isEmpty(graphErc20Awards) && !!poolAddress;\n  const refetchInterval = !pauseQueries && blockNumber === -1 ? MAINNET_POLLING_INTERVAL : false;\n  return useQuery([QUERY_KEYS.ethereumErc20sQuery, chainId, poolAddress, -1], async () => await getEthereumErc20Data(params), {\n    enabled,\n    refetchInterval\n  });\n}","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/hooks/useEthereumErc20Query.js"],"names":["useQuery","isEmpty","MAINNET_POLLING_INTERVAL","QUERY_KEYS","fetchExternalErc20Awards","getEthereumErc20Data","params","useEthereumErc20Query","pauseQueries","chainId","lootBoxAddress","tokenId","enabled","provider","graphErc20Awards","poolAddress","refetchInterval","blockNumber","ethereumErc20sQuery"],"mappings":"AAAA,SAASA,QAAT,QAAyB,aAAzB;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEA,SACEC,wBADF,EAEEC,UAFF,QAGO,eAHP;AAIA,SAASC,wBAAT,QAAyC,oCAAzC;;AAEA,MAAMC,oBAAoB,GAAG,MAAOC,MAAP,IAAkB;AAC7C,SAAO,MAAMF,wBAAwB,CAACE,MAAD,CAArC;AACD,CAFD;;AAIA,OAAO,SAASC,qBAAT,CAA+BC,YAA/B,EAA6CC,OAA7C,EAAsDC,cAAtD,EAAsEC,OAAtE,EAA+E;AACpF,QAAMC,OAAO,GAAG,CAACJ,YAAD,IACdC,OADc,IAEd,CAACR,OAAO,CAACY,QAAD,CAFM,IAGd,CAACZ,OAAO,CAACa,gBAAD,CAHM,IAId,CAAC,CAACC,WAJJ;AAMA,QAAMC,eAAe,GAAG,CAACR,YAAD,IAAkBS,WAAW,KAAK,CAAC,CAAnC,GACtBf,wBADsB,GAEtB,KAFF;AAIA,SAAOF,QAAQ,CACb,CAACG,UAAU,CAACe,mBAAZ,EAAiCT,OAAjC,EAA0CM,WAA1C,EAAuD,CAAC,CAAxD,CADa,EAEb,YAAY,MAAMV,oBAAoB,CAACC,MAAD,CAFzB,EAGb;AACEM,IAAAA,OADF;AAEEI,IAAAA;AAFF,GAHa,CAAf;AAQD","sourcesContent":["import { useQuery } from 'react-query'\nimport { isEmpty } from 'lodash'\n\nimport {\n  MAINNET_POLLING_INTERVAL,\n  QUERY_KEYS,\n} from 'lib/constants'\nimport { fetchExternalErc20Awards } from 'lib/utils/fetchExternalErc20Awards'\n\nconst getEthereumErc20Data = async (params) => {\n  return await fetchExternalErc20Awards(params)\n}\n\nexport function useEthereumErc20Query(pauseQueries, chainId, lootBoxAddress, tokenId) {\n  const enabled = !pauseQueries &&\n    chainId &&\n    !isEmpty(provider) &&\n    !isEmpty(graphErc20Awards) &&\n    !!poolAddress\n\n  const refetchInterval = !pauseQueries && (blockNumber === -1) ?\n    MAINNET_POLLING_INTERVAL :\n    false\n\n  return useQuery(\n    [QUERY_KEYS.ethereumErc20sQuery, chainId, poolAddress, -1],\n    async () => await getEthereumErc20Data(params),\n    { \n      enabled,\n      refetchInterval\n    }\n  )\n}\n"]},"metadata":{},"sourceType":"module"}