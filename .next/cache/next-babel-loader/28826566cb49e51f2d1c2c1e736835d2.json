{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport ContentLoader from 'react-content-loader';\nimport { ThemeContext } from 'lib/components/contextProviders/ThemeContextProvider';\nexport const SmallLoader = props => {\n  if (!window) {\n    return null;\n  }\n\n  const {\n    theme\n  } = useContext(ThemeContext);\n  const bgColor = theme === 'light' ? '#ffffff' : '#401C94';\n  const foreColor = theme === 'light' ? '#f5f5f5' : '#501C94';\n  return __jsx(React.Fragment, null, __jsx(ContentLoader, {\n    gradientRatio: 2.5,\n    interval: 0.05,\n    speed: 0.6,\n    viewBox: \"0 0 50 30\",\n    backgroundColor: bgColor,\n    foregroundColor: foreColor\n  }, __jsx(\"rect\", {\n    x: \"0\",\n    y: \"0\",\n    rx: \"5\",\n    ry: \"5\",\n    width: \"50\",\n    height: \"30\"\n  })));\n};","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/components/SmallLoader.jsx"],"names":["React","useContext","ContentLoader","ThemeContext","SmallLoader","props","window","theme","bgColor","foreColor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AAEA,SAASC,YAAT,QAA6B,sDAA7B;AAEA,OAAO,MAAMC,WAAW,GACtBC,KADyB,IAEtB;AACH,MAAI,CAACC,MAAL,EAAa;AACX,WAAO,IAAP;AACD;;AAED,QAAM;AAAEC,IAAAA;AAAF,MAAYN,UAAU,CAACE,YAAD,CAA5B;AAEA,QAAMK,OAAO,GAAGD,KAAK,KAAK,OAAV,GAAoB,SAApB,GAAgC,SAAhD;AACA,QAAME,SAAS,GAAGF,KAAK,KAAK,OAAV,GAAoB,SAApB,GAAgC,SAAlD;AAEA,SAAO,4BACL,MAAC,aAAD;AACE,IAAA,aAAa,EAAE,GADjB;AAEE,IAAA,QAAQ,EAAE,IAFZ;AAGE,IAAA,KAAK,EAAE,GAHT;AAIE,IAAA,OAAO,EAAC,WAJV;AAKE,IAAA,eAAe,EAAEC,OALnB;AAME,IAAA,eAAe,EAAEC;AANnB,KAQE;AAAM,IAAA,CAAC,EAAC,GAAR;AAAY,IAAA,CAAC,EAAC,GAAd;AAAkB,IAAA,EAAE,EAAC,GAArB;AAAyB,IAAA,EAAE,EAAC,GAA5B;AAAgC,IAAA,KAAK,EAAC,IAAtC;AAA2C,IAAA,MAAM,EAAC;AAAlD,IARF,CADK,CAAP;AAYD,CAxBM","sourcesContent":["import React, { useContext } from 'react'\nimport ContentLoader from 'react-content-loader'\n\nimport { ThemeContext } from 'lib/components/contextProviders/ThemeContextProvider'\n\nexport const SmallLoader = (\n  props,\n) => {\n  if (!window) {\n    return null\n  }\n  \n  const { theme } = useContext(ThemeContext)\n\n  const bgColor = theme === 'light' ? '#ffffff' : '#401C94'\n  const foreColor = theme === 'light' ? '#f5f5f5' : '#501C94'\n\n  return <>\n    <ContentLoader\n      gradientRatio={2.5}\n      interval={0.05}\n      speed={0.6}\n      viewBox=\"0 0 50 30\"\n      backgroundColor={bgColor}\n      foregroundColor={foreColor}\n    >\n      <rect x=\"0\" y=\"0\" rx=\"5\" ry=\"5\" width=\"50\" height=\"30\" />\n    </ContentLoader>\n  </> \n}\n"]},"metadata":{},"sourceType":"module"}