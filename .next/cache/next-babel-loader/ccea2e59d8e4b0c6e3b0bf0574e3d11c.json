{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { request } from 'graphql-request';\nimport { LOOTBOX_GRAPH_URIS } from 'lib/constants';\nimport { lootBoxQuery } from 'lib/queries/lootBoxQuery';\nexport var getGraphLootBoxData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(chainId, lootBoxAddress, tokenId, blockNumber) {\n    var variables, query, response, lootBox, _response, _response$data, _response$data$lootBo, _response2, _response2$data, _response2$data$lootB;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            variables = {\n              lootBoxAddress: lootBoxAddress,\n              tokenId: tokenId\n            };\n            query = lootBoxQuery(blockNumber);\n            _context.prev = 2;\n            _context.next = 5;\n            return request(LOOTBOX_GRAPH_URIS[chainId], query, variables);\n\n          case 5:\n            response = _context.sent;\n            lootBox = (_response = response) === null || _response === void 0 ? void 0 : (_response$data = _response.data) === null || _response$data === void 0 ? void 0 : (_response$data$lootBo = _response$data.lootBoxes) === null || _response$data$lootBo === void 0 ? void 0 : _response$data$lootBo[0];\n            console.log((_response2 = response) === null || _response2 === void 0 ? void 0 : (_response2$data = _response2.data) === null || _response2$data === void 0 ? void 0 : (_response2$data$lootB = _response2$data.lootBoxes) === null || _response2$data$lootB === void 0 ? void 0 : _response2$data$lootB[0]);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](2);\n            console.error(JSON.stringify(_context.t0, undefined, 2));\n\n          case 13:\n            return _context.abrupt(\"return\", lootBox);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[2, 10]]);\n  }));\n\n  return function getGraphLootBoxData(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/fetchers/getGraphLootBoxData.js"],"names":["request","LOOTBOX_GRAPH_URIS","lootBoxQuery","getGraphLootBoxData","chainId","lootBoxAddress","tokenId","blockNumber","variables","query","response","lootBox","data","lootBoxes","console","log","error","JSON","stringify","undefined"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,iBAAxB;AAEA,SAASC,kBAAT,QAAmC,eAAnC;AACA,SAASC,YAAT,QAA6B,0BAA7B;AAEA,OAAO,IAAMC,mBAAmB;AAAA,sEAAG,iBAAOC,OAAP,EAAgBC,cAAhB,EAAgCC,OAAhC,EAAyCC,WAAzC;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC3BC,YAAAA,SAD2B,GACf;AAChBH,cAAAA,cAAc,EAAdA,cADgB;AAEhBC,cAAAA,OAAO,EAAPA;AAFgB,aADe;AAM3BG,YAAAA,KAN2B,GAMnBP,YAAY,CAACK,WAAD,CANO;AAAA;AAAA;AAAA,mBAWdP,OAAO,CACtBC,kBAAkB,CAACG,OAAD,CADI,EAEtBK,KAFsB,EAGtBD,SAHsB,CAXO;;AAAA;AAW/BE,YAAAA,QAX+B;AAgB/BC,YAAAA,OAAO,gBAAGD,QAAH,gEAAG,UAAUE,IAAb,4EAAG,eAAgBC,SAAnB,0DAAG,sBAA4B,CAA5B,CAAV;AACAC,YAAAA,OAAO,CAACC,GAAR,eAAYL,QAAZ,kEAAY,WAAUE,IAAtB,6EAAY,gBAAgBC,SAA5B,0DAAY,sBAA4B,CAA5B,CAAZ;AAjB+B;AAAA;;AAAA;AAAA;AAAA;AAmB/BC,YAAAA,OAAO,CAACE,KAAR,CAAcC,IAAI,CAACC,SAAL,cAAsBC,SAAtB,EAAiC,CAAjC,CAAd;;AAnB+B;AAAA,6CAsB1BR,OAtB0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAnBR,mBAAmB;AAAA;AAAA;AAAA,GAAzB","sourcesContent":["import { request } from 'graphql-request'\n\nimport { LOOTBOX_GRAPH_URIS } from 'lib/constants'\nimport { lootBoxQuery } from 'lib/queries/lootBoxQuery'\n\nexport const getGraphLootBoxData = async (chainId, lootBoxAddress, tokenId, blockNumber) => {\n  const variables = {\n    lootBoxAddress,\n    tokenId,\n  }\n\n  const query = lootBoxQuery(blockNumber)\n\n  let response,\n    lootBox\n  try {\n    response = await request(\n      LOOTBOX_GRAPH_URIS[chainId],\n      query,\n      variables\n    )\n    lootBox = response?.data?.lootBoxes?.[0]\n    console.log(response?.data?.lootBoxes?.[0])\n  } catch (error) {\n    console.error(JSON.stringify(error, undefined, 2))\n  }\n\n  return lootBox\n}\n"]},"metadata":{},"sourceType":"module"}