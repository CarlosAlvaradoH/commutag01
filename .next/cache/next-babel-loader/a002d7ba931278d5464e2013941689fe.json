{"ast":null,"code":"import { batch, contract } from '@pooltogether/etherplex';\nimport LootBoxControllerAbi from '@pooltogether/loot-box/abis/LootBoxController';\n\nconst debug = require('debug')('pool-app:fetchExternalLootBoxData');\n\nexport const fetchExternalLootBoxData = async (provider, lootBoxControllerAddress, lootBoxAddress, tokenId) => {\n  try {\n    var _values$lootBoxContro, _values$lootBoxContro2, _values$lootBoxContro3, _values$lootBoxContro4;\n\n    const etherplexLootBoxControllerContract = contract('lootBoxController', LootBoxControllerAbi, lootBoxControllerAddress);\n    const values = await batch(provider, etherplexLootBoxControllerContract.computeAddress(lootBoxAddress, tokenId));\n    console.log(values === null || values === void 0 ? void 0 : (_values$lootBoxContro = values.lootBoxController) === null || _values$lootBoxContro === void 0 ? void 0 : (_values$lootBoxContro2 = _values$lootBoxContro.computeAddress) === null || _values$lootBoxContro2 === void 0 ? void 0 : _values$lootBoxContro2[0]);\n    return {\n      computedLootBoxAddress: values === null || values === void 0 ? void 0 : (_values$lootBoxContro3 = values.lootBoxController) === null || _values$lootBoxContro3 === void 0 ? void 0 : (_values$lootBoxContro4 = _values$lootBoxContro3.computeAddress) === null || _values$lootBoxContro4 === void 0 ? void 0 : _values$lootBoxContro4[0],\n      loading: false\n    };\n  } catch (e) {\n    console.error(e);\n    throw {\n      name: 'fetchExternalLootBoxData Error',\n      message: `Error from Infura was: ${e.message}`\n    };\n  }\n};","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/utils/fetchExternalLootBoxData.js"],"names":["batch","contract","LootBoxControllerAbi","debug","require","fetchExternalLootBoxData","provider","lootBoxControllerAddress","lootBoxAddress","tokenId","etherplexLootBoxControllerContract","values","computeAddress","console","log","lootBoxController","computedLootBoxAddress","loading","e","error","name","message"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,yBAAhC;AAEA,OAAOC,oBAAP,MAAiC,+CAAjC;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiB,mCAAjB,CAAd;;AAEA,OAAO,MAAMC,wBAAwB,GAAG,OACtCC,QADsC,EAEtCC,wBAFsC,EAGtCC,cAHsC,EAItCC,OAJsC,KAKnC;AACH,MAAI;AAAA;;AACF,UAAMC,kCAAkC,GAAGT,QAAQ,CACjD,mBADiD,EAEjDC,oBAFiD,EAGjDK,wBAHiD,CAAnD;AAMA,UAAMI,MAAM,GAAG,MAAMX,KAAK,CACxBM,QADwB,EAExBI,kCAAkC,CAC/BE,cADH,CACkBJ,cADlB,EACkCC,OADlC,CAFwB,CAA1B;AAKAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,aAAYA,MAAZ,gDAAYA,MAAM,CAAEI,iBAApB,oFAAY,sBAA2BH,cAAvC,2DAAY,uBAA4C,CAA5C,CAAZ;AAEA,WAAO;AACLI,MAAAA,sBAAsB,EAAEL,MAAF,aAAEA,MAAF,iDAAEA,MAAM,CAAEI,iBAAV,qFAAE,uBAA2BH,cAA7B,2DAAE,uBAA4C,CAA5C,CADnB;AAELK,MAAAA,OAAO,EAAE;AAFJ,KAAP;AAID,GAlBD,CAkBE,OAAOC,CAAP,EAAU;AACVL,IAAAA,OAAO,CAACM,KAAR,CAAcD,CAAd;AACA,UAAM;AACJE,MAAAA,IAAI,EAAE,gCADF;AAEJC,MAAAA,OAAO,EAAG,0BAAyBH,CAAC,CAACG,OAAQ;AAFzC,KAAN;AAID;AACF,CA/BM","sourcesContent":["import { batch, contract } from '@pooltogether/etherplex'\n\nimport LootBoxControllerAbi from '@pooltogether/loot-box/abis/LootBoxController'\n\nconst debug = require('debug')('pool-app:fetchExternalLootBoxData')\n\nexport const fetchExternalLootBoxData = async (\n  provider,\n  lootBoxControllerAddress,\n  lootBoxAddress,\n  tokenId,\n) => {\n  try {\n    const etherplexLootBoxControllerContract = contract(\n      'lootBoxController',\n      LootBoxControllerAbi,\n      lootBoxControllerAddress\n    )\n\n    const values = await batch(\n      provider,\n      etherplexLootBoxControllerContract\n        .computeAddress(lootBoxAddress, tokenId)\n    )\n    console.log(values?.lootBoxController?.computeAddress?.[0])\n\n    return {\n      computedLootBoxAddress: values?.lootBoxController?.computeAddress?.[0],\n      loading: false\n    }\n  } catch (e) {\n    console.error(e)\n    throw {\n      name: 'fetchExternalLootBoxData Error',\n      message: `Error from Infura was: ${e.message}`\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}