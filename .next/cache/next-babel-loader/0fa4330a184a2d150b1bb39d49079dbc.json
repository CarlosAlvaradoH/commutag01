{"ast":null,"code":"import { useContext } from 'react';\nimport { useQuery } from 'react-query';\nimport { MAINNET_POLLING_INTERVAL, QUERY_KEYS } from 'lib/constants';\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider';\nimport { getGraphLootBoxData } from 'lib/fetchers/getGraphLootBoxData';\nexport function useGraphLootBoxQuery(lootBoxAddress, tokenId, blockNumber = -1) {\n  const {\n    pauseQueries,\n    chainId\n  } = useContext(AuthControllerContext);\n  const refetchInterval = blockNumber === -1 ? MAINNET_POLLING_INTERVAL : false;\n  console.log([QUERY_KEYS.lootBoxQuery, chainId, lootBoxAddress, tokenId, blockNumber]);\n  return useQuery([QUERY_KEYS.lootBoxQuery, chainId, lootBoxAddress, tokenId, blockNumber], async () => {\n    return getGraphLootBoxData(chainId, lootBoxAddress, tokenId, blockNumber);\n  }, {\n    enabled: !pauseQueries && chainId && lootBoxAddress && tokenId && blockNumber,\n    refetchInterval\n  });\n}","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/hooks/useGraphLootBoxQuery.js"],"names":["useContext","useQuery","MAINNET_POLLING_INTERVAL","QUERY_KEYS","AuthControllerContext","getGraphLootBoxData","useGraphLootBoxQuery","lootBoxAddress","tokenId","blockNumber","pauseQueries","chainId","refetchInterval","console","log","lootBoxQuery","enabled"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,SACEC,wBADF,EAEEC,UAFF,QAGO,eAHP;AAIA,SAASC,qBAAT,QAAsC,+DAAtC;AACA,SAASC,mBAAT,QAAoC,kCAApC;AAEA,OAAO,SAASC,oBAAT,CAA8BC,cAA9B,EAA8CC,OAA9C,EAAuDC,WAAW,GAAG,CAAC,CAAtE,EAAyE;AAC9E,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAA4BX,UAAU,CAACI,qBAAD,CAA5C;AAEA,QAAMQ,eAAe,GAAIH,WAAW,KAAK,CAAC,CAAlB,GACtBP,wBADsB,GAEtB,KAFF;AAIAW,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACX,UAAU,CAACY,YAAZ,EAA0BJ,OAA1B,EAAmCJ,cAAnC,EAAmDC,OAAnD,EAA4DC,WAA5D,CAAZ;AACA,SAAOR,QAAQ,CACb,CAACE,UAAU,CAACY,YAAZ,EAA0BJ,OAA1B,EAAmCJ,cAAnC,EAAmDC,OAAnD,EAA4DC,WAA5D,CADa,EAEb,YAAY;AAAE,WAAOJ,mBAAmB,CAACM,OAAD,EAAUJ,cAAV,EAA0BC,OAA1B,EAAmCC,WAAnC,CAA1B;AAA2E,GAF5E,EAGb;AACEO,IAAAA,OAAO,EAAE,CAACN,YAAD,IAAiBC,OAAjB,IAA4BJ,cAA5B,IAA8CC,OAA9C,IAAyDC,WADpE;AAEEG,IAAAA;AAFF,GAHa,CAAf;AAQD","sourcesContent":["import { useContext } from 'react'\nimport { useQuery } from 'react-query'\n\nimport {\n  MAINNET_POLLING_INTERVAL,\n  QUERY_KEYS\n} from 'lib/constants'\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider'\nimport { getGraphLootBoxData } from 'lib/fetchers/getGraphLootBoxData'\n\nexport function useGraphLootBoxQuery(lootBoxAddress, tokenId, blockNumber = -1) {\n  const { pauseQueries, chainId } = useContext(AuthControllerContext)\n\n  const refetchInterval = (blockNumber === -1) ?\n    MAINNET_POLLING_INTERVAL :\n    false\n\n  console.log([QUERY_KEYS.lootBoxQuery, chainId, lootBoxAddress, tokenId, blockNumber])\n  return useQuery(\n    [QUERY_KEYS.lootBoxQuery, chainId, lootBoxAddress, tokenId, blockNumber],\n    async () => { return getGraphLootBoxData(chainId, lootBoxAddress, tokenId, blockNumber) },\n    {\n      enabled: !pauseQueries && chainId && lootBoxAddress && tokenId && blockNumber,\n      refetchInterval\n    }\n  )\n}\n"]},"metadata":{},"sourceType":"module"}