{"ast":null,"code":"import { getSymbolForMetaMask } from 'lib/utils/getSymbolForMetaMask';\nexport const addTokenToMetaMask = async (networkName, pool) => {\n  try {\n    var _pool$prizeStrategy, _pool$prizeStrategy$s, _pool$prizeStrategy$s2;\n\n    const symbol = getSymbolForMetaMask(networkName, pool);\n    const wasAdded = await ethereum.request({\n      method: 'wallet_watchAsset',\n      params: {\n        type: 'ERC20',\n        options: {\n          address: pool === null || pool === void 0 ? void 0 : (_pool$prizeStrategy = pool.prizeStrategy) === null || _pool$prizeStrategy === void 0 ? void 0 : (_pool$prizeStrategy$s = _pool$prizeStrategy.singleRandomWinner) === null || _pool$prizeStrategy$s === void 0 ? void 0 : (_pool$prizeStrategy$s2 = _pool$prizeStrategy$s.ticket) === null || _pool$prizeStrategy$s2 === void 0 ? void 0 : _pool$prizeStrategy$s2.id,\n          symbol,\n          // A ticker symbol or shorthand, up to 5 chars.\n          decimals: pool === null || pool === void 0 ? void 0 : pool.underlyingCollateralDecimals,\n          // The number of decimals in the token\n          image: 'https://app.pooltogether.com/pooltogether-token-logo@2x.png'\n        }\n      }\n    });\n\n    if (wasAdded) {// console.log('Thanks for your interest!')\n    } else {\n      console.log('Token not added');\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/services/addTokenToMetaMask.js"],"names":["getSymbolForMetaMask","addTokenToMetaMask","networkName","pool","symbol","wasAdded","ethereum","request","method","params","type","options","address","prizeStrategy","singleRandomWinner","ticket","id","decimals","underlyingCollateralDecimals","image","console","log","error"],"mappings":"AAAA,SAASA,oBAAT,QAAqC,gCAArC;AAEA,OAAO,MAAMC,kBAAkB,GAAG,OAAOC,WAAP,EAAoBC,IAApB,KAA6B;AAC7D,MAAI;AAAA;;AACF,UAAMC,MAAM,GAAGJ,oBAAoB,CAACE,WAAD,EAAcC,IAAd,CAAnC;AAEA,UAAME,QAAQ,GAAG,MAAMC,QAAQ,CAACC,OAAT,CAAiB;AACtCC,MAAAA,MAAM,EAAE,mBAD8B;AAEtCC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE,OADA;AAENC,QAAAA,OAAO,EAAE;AACPC,UAAAA,OAAO,EAAET,IAAF,aAAEA,IAAF,8CAAEA,IAAI,CAAEU,aAAR,iFAAE,oBAAqBC,kBAAvB,oFAAE,sBAAyCC,MAA3C,2DAAE,uBAAiDC,EADnD;AAEPZ,UAAAA,MAFO;AAEC;AACRa,UAAAA,QAAQ,EAAEd,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEe,4BAHT;AAGuC;AAC9CC,UAAAA,KAAK,EAAE;AAJA;AAFH;AAF8B,KAAjB,CAAvB;;AAaA,QAAId,QAAJ,EAAc,CACZ;AACD,KAFD,MAEO;AACLe,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD;AACF,GArBD,CAqBE,OAAOC,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,CAzBM","sourcesContent":["import { getSymbolForMetaMask } from 'lib/utils/getSymbolForMetaMask'\n\nexport const addTokenToMetaMask = async (networkName, pool) => {\n  try {\n    const symbol = getSymbolForMetaMask(networkName, pool)\n\n    const wasAdded = await ethereum.request({\n      method: 'wallet_watchAsset',\n      params: {\n        type: 'ERC20',\n        options: {\n          address: pool?.prizeStrategy?.singleRandomWinner?.ticket?.id,\n          symbol, // A ticker symbol or shorthand, up to 5 chars.\n          decimals: pool?.underlyingCollateralDecimals, // The number of decimals in the token\n          image: 'https://app.pooltogether.com/pooltogether-token-logo@2x.png',\n        },\n      },\n    })\n\n    if (wasAdded) {\n      // console.log('Thanks for your interest!')\n    } else {\n      console.log('Token not added')\n    }\n  } catch (error) {\n    console.log(error)\n  }\n}\n"]},"metadata":{},"sourceType":"module"}