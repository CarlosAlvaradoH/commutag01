{"ast":null,"code":"import { useContext } from 'react';\nimport { useQuery } from 'react-query';\nimport { MAINNET_POLLING_INTERVAL, QUERY_KEYS } from 'lib/constants';\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider';\nimport { fetchExternalLootBoxData } from 'lib/utils/fetchExternalLootBoxData';\nexport function useEthereumLootBoxQuery(lootBoxAddress, tokenId) {\n  const {\n    chainId,\n    pauseQueries\n  } = useContext(AuthControllerContext);\n  const enabled = !pauseQueries && chainId && Boolean(lootBoxAddress) && Boolean(tokenId);\n  return useQuery([QUERY_KEYS.ethereumLootBoxQuery, chainId, poolAddress, -1], async () => await fetchExternalLootBoxData(params), {\n    enabled,\n    refetchInterval: MAINNET_POLLING_INTERVAL\n  });\n}","map":{"version":3,"sources":["/Users/chuckbergeron/Git/crypto/pool-together/pool-app/lib/hooks/useEthereumLootBoxQuery.js"],"names":["useContext","useQuery","MAINNET_POLLING_INTERVAL","QUERY_KEYS","AuthControllerContext","fetchExternalLootBoxData","useEthereumLootBoxQuery","lootBoxAddress","tokenId","chainId","pauseQueries","enabled","Boolean","ethereumLootBoxQuery","poolAddress","params","refetchInterval"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,SACEC,wBADF,EAEEC,UAFF,QAGO,eAHP;AAIA,SAASC,qBAAT,QAAsC,+DAAtC;AACA,SAASC,wBAAT,QAAyC,oCAAzC;AAEA,OAAO,SAASC,uBAAT,CAAiCC,cAAjC,EAAiDC,OAAjD,EAA0D;AAC/D,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA4BV,UAAU,CAACI,qBAAD,CAA5C;AAEA,QAAMO,OAAO,GAAG,CAACD,YAAD,IACdD,OADc,IAEdG,OAAO,CAACL,cAAD,CAFO,IAGdK,OAAO,CAACJ,OAAD,CAHT;AAKA,SAAOP,QAAQ,CACb,CAACE,UAAU,CAACU,oBAAZ,EAAkCJ,OAAlC,EAA2CK,WAA3C,EAAwD,CAAC,CAAzD,CADa,EAEb,YAAY,MAAMT,wBAAwB,CAACU,MAAD,CAF7B,EAGb;AACEJ,IAAAA,OADF;AAEEK,IAAAA,eAAe,EAAEd;AAFnB,GAHa,CAAf;AAQD","sourcesContent":["import { useContext } from 'react'\nimport { useQuery } from 'react-query'\n\nimport {\n  MAINNET_POLLING_INTERVAL,\n  QUERY_KEYS,\n} from 'lib/constants'\nimport { AuthControllerContext } from 'lib/components/contextProviders/AuthControllerContextProvider'\nimport { fetchExternalLootBoxData } from 'lib/utils/fetchExternalLootBoxData'\n\nexport function useEthereumLootBoxQuery(lootBoxAddress, tokenId) {\n  const { chainId, pauseQueries } = useContext(AuthControllerContext)\n  \n  const enabled = !pauseQueries &&\n    chainId &&\n    Boolean(lootBoxAddress) &&\n    Boolean(tokenId)\n\n  return useQuery(\n    [QUERY_KEYS.ethereumLootBoxQuery, chainId, poolAddress, -1],\n    async () => await fetchExternalLootBoxData(params),\n    {\n      enabled,\n      refetchInterval: MAINNET_POLLING_INTERVAL\n    }\n  )\n}\n"]},"metadata":{},"sourceType":"module"}